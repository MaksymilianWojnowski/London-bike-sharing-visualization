<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0208.0337                               -->
<workbook original-version='18.1' source-build='2024.1.0 (20241.24.0208.0337)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
        <calculation class='tableau' formula='&quot;week&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving Avarage Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
        <calculation class='tableau' formula='50' />
      </column>
    </datasource>
    <datasource caption='Data (london_bikes_cleaned)' inline='true' name='federated.13zzeb50mq178913kyznx0ecu8gy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes_cleaned' name='excel-direct.0lof0po011qox419wtsom1e5z1qf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/maksymilianwojnowski/Desktop/London bike sharing/london_bikes_cleaned.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0lof0po011qox419wtsom1e5z1qf' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temperature_C' ordinal='3' />
            <column datatype='real' name='temperature_perceived_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0lof0po011qox419wtsom1e5z1qf' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temperature_C' ordinal='3' />
            <column datatype='real' name='temperature_perceived_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temperature_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_perceived_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_perceived_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temperature_perceived_C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity_percent]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>humidity_percent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A17D3DFA5FDF440A8E7939526EE33BDD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Avarage Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Moving Avarage Period' datatype='date' datatype-customized='true' name='[Calculation_4344847805858594816]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
      </column>
      <column caption='Min Month' datatype='date' name='[Calculation_4344847805859639298]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MIN ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
      </column>
      <column caption='In Range' datatype='boolean' name='[Calculation_4344847805867122692]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4344847805858594816] &gt;= [Calculation_4344847805859639298]&#10;AND&#10;[Calculation_4344847805858594816] &lt;= [Min Month (copy)_4344847805859860483]' />
      </column>
      <column caption='In Range Rides' datatype='integer' name='[Calculation_4344847805868048389]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{SUM (INT([Calculation_4344847805867122692]) * [count])}' />
      </column>
      <column caption='Max Month ' datatype='date' name='[Min Month (copy)_4344847805859860483]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MAX ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
      </column>
      <column aggregation='None' caption='Wind Speed [Kph]' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_A17D3DFA5FDF440A8E7939526EE33BDD]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Humidity Percent' datatype='real' name='[humidity_percent]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Temperature [C]' datatype='integer' name='[temperature C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[temperature_C]' peg='0' size='2.44' />
      </column>
      <column caption='temperature C' datatype='real' name='[temperature_C]' role='measure' type='quantitative' />
      <column caption='temperature perceived C' datatype='real' name='[temperature_perceived_C]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_4344847805867122692]' derivation='Attribute' name='[attr:Calculation_4344847805867122692:nk]' pivot='key' type='nominal' />
      <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
      <group caption='Moving Avarage Period Set' name='[Moving Avarage Period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-02-01#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-02-08#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-02-15#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-02-22#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-03-01#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-03-08#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-03-15#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-03-22#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-03-29#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-04-05#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-04-12#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-04-19#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-04-26#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-05-03#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-05-10#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-05-17#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-05-24#' />
          <groupfilter function='member' level='[Calculation_4344847805858594816]' member='#2015-05-31#' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Min Month,Max Month ,Wind Speed [Kph],Temperature [C])' hidden='true' name='[Tooltip (Min Month,Max Month ,Wind Speed [Kph]],Temperature [C]])]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_4344847805859639298]' />
          <groupfilter function='level-members' level='[Min Month (copy)_4344847805859860483]' />
          <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
          <groupfilter function='level-members' level='[temperature C (bin)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving Avarage Period,Min Month,Max Month )' hidden='true' name='[Tooltip (Moving Avarage Period,Min Month,Max Month )]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_4344847805858594816]' />
          <groupfilter function='level-members' level='[Calculation_4344847805859639298]' />
          <groupfilter function='level-members' level='[Min Month (copy)_4344847805859860483]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.629762' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.370238' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Calculation_4344847805867122692:nk]' type='palette'>
            <map to='#7c4d79'>
              <bucket>true</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:time:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:weather:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Broken clouds&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rain with thunderstrom&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowfall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cloudy&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Scattered clouds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
        </column>
        <column caption='Moving Avarage Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
          <calculation class='tableau' formula='50' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_A17D3DFA5FDF440A8E7939526EE33BDD'>
            <properties context=''>
              <relation connection='excel-direct.0lof0po011qox419wtsom1e5z1qf' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='temperature_C' ordinal='3' />
                  <column datatype='real' name='temperature_perceived_C' ordinal='4' />
                  <column datatype='real' name='humidity_percent' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-group-action caption='Update Moving Avarage Period Set' name='[Action1_53C3426236674C34BAAFB4B1C6902321]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='MovingAvarage' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.13zzeb50mq178913kyznx0ecu8gy].[Moving Avarage Period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#7c4d79'>Temperature vs wind speed</run>
            <run>Æ&#10;</run>
            <run fontcolor='#7c4d79' fontsize='12'><![CDATA[ between <[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805859639298:qk]> and <[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Min Month (copy)_4344847805859860483:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_cleaned)' name='federated.13zzeb50mq178913kyznx0ecu8gy' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13zzeb50mq178913kyznx0ecu8gy'>
            <column caption='Moving Avarage Period' datatype='date' datatype-customized='true' name='[Calculation_4344847805858594816]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_4344847805859639298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_4344847805867122692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4344847805858594816] &gt;= [Calculation_4344847805859639298]&#10;AND&#10;[Calculation_4344847805858594816] &lt;= [Min Month (copy)_4344847805859860483]' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_4344847805859860483]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column aggregation='None' caption='Wind Speed [Kph]' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4344847805859639298]' derivation='None' name='[none:Calculation_4344847805859639298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4344847805867122692]' derivation='None' name='[none:Calculation_4344847805867122692:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_4344847805859860483]' derivation='None' name='[none:Min Month (copy)_4344847805859860483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[temperature C (bin)]' derivation='None' name='[none:temperature C (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temperature [C]' datatype='integer' name='[temperature C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temperature_C]' peg='0' size='2.44' />
            </column>
            <column caption='temperature C' datatype='real' name='[temperature_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]'>
            <groupfilter function='member' level='[none:Calculation_4344847805867122692:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:temperature C (bin):ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:temperature C (bin):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:temperature C (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Wind Speed Kph (bin):ok]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5dce4</color>
                <color>#d9c9d8</color>
                <color>#cdb6cc</color>
                <color>#c2a4c0</color>
                <color>#b693b4</color>
                <color>#aa83a8</color>
                <color>#9f749c</color>
                <color>#936690</color>
                <color>#875984</color>
                <color>#7c4d79</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='background-color' id='refline8' value='#ffffff00' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline8' value='#d8d0eb' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline12' value='#e6e6e6' />
            <format attr='stroke-color' id='refline8' value='#b07aa1' />
            <format attr='stroke-size' id='refline8' value='1' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]' />
              <text column='[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805859639298:qk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Min Month (copy)_4344847805859860483:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#7c4d79'><![CDATA[Temperature [C]:	<[federated.13zzeb50mq178913kyznx0ecu8gy].[none:temperature C (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#7c4d79'><![CDATA[Wind Speed [Kph]:	<[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Wind Speed Kph (bin):ok]>]]></run>
                <run><![CDATA[

<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">

<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">
]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:temperature C (bin):ok]</rows>
        <cols>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[Wind Speed Kph (bin)]</column>
          <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[temperature C (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{175DEEC8-173A-4116-BE34-EFE2BD25F3F4}' />
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_cleaned)' name='federated.13zzeb50mq178913kyznx0ecu8gy' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13zzeb50mq178913kyznx0ecu8gy'>
            <column caption='Moving Avarage Period' datatype='date' datatype-customized='true' name='[Calculation_4344847805858594816]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_4344847805859639298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_4344847805867122692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4344847805858594816] &gt;= [Calculation_4344847805859639298]&#10;AND&#10;[Calculation_4344847805858594816] &lt;= [Min Month (copy)_4344847805859860483]' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_4344847805859860483]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column aggregation='None' caption='Wind Speed [Kph]' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4344847805859639298]' derivation='None' name='[none:Calculation_4344847805859639298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4344847805867122692]' derivation='None' name='[none:Calculation_4344847805867122692:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_4344847805859860483]' derivation='None' name='[none:Min Month (copy)_4344847805859860483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temperature [C]' datatype='integer' name='[temperature C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temperature_C]' peg='0' size='2.44' />
            </column>
            <column caption='temperature C' datatype='real' name='[temperature_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13zzeb50mq178913kyznx0ecu8gy].[Tooltip (Min Month,Max Month ,Wind Speed [Kph]],Temperature [C]])]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_4344847805859639298]' />
              <groupfilter function='level-members' level='[Min Month (copy)_4344847805859860483]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temperature C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]'>
            <groupfilter function='member' level='[none:Calculation_4344847805867122692:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]</column>
            <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[Tooltip (Min Month,Max Month ,Wind Speed [Kph]],Temperature [C]])]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='background-color' id='refline8' value='#ffffff00' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline8' value='#d8d0eb' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline12' value='#e6e6e6' />
            <format attr='stroke-color' id='refline8' value='#b07aa1' />
            <format attr='stroke-size' id='refline8' value='1' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.13zzeb50mq178913kyznx0ecu8gy].[hr:time:ok]' />
              <text column='[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805859639298:qk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Min Month (copy)_4344847805859860483:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13zzeb50mq178913kyznx0ecu8gy].[hr:time:ok]</rows>
        <cols>[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{62594DFB-0BCE-4FA0-9E23-689B7B741D76}' />
    </worksheet>
    <worksheet name='MovingAvarage'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#7c4d79'>&lt;</run>
            <run bold='true' fontcolor='#7c4d79'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontcolor='#7c4d79'>&gt;  &lt;</run>
            <run bold='true' fontcolor='#7c4d79'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#7c4d79'>&gt; moving avarage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_cleaned)' name='federated.13zzeb50mq178913kyznx0ecu8gy' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
            <column caption='Moving Avarage Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
              <calculation class='tableau' formula='50' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13zzeb50mq178913kyznx0ecu8gy'>
            <column caption='Moving Avarage Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Moving Avarage Period' datatype='date' datatype-customized='true' name='[Calculation_4344847805858594816]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_4344847805859639298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_4344847805867122692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4344847805858594816] &gt;= [Calculation_4344847805859639298]&#10;AND&#10;[Calculation_4344847805858594816] &lt;= [Min Month (copy)_4344847805859860483]' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_4344847805859860483]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column-instance column='[Calculation_4344847805867122692]' derivation='Attribute' name='[attr:Calculation_4344847805867122692:nk]' pivot='key' type='nominal' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4344847805858594816]' derivation='None' name='[none:Calculation_4344847805858594816:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4344847805859639298]' derivation='None' name='[none:Calculation_4344847805859639298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_4344847805859860483]' derivation='None' name='[none:Min Month (copy)_4344847805859860483:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]' included-values='in-range-or-null'>
            <min>#2015-01-04#</min>
            <max>#2016-01-22#</max>
          </filter>
          <slices>
            <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.13zzeb50mq178913kyznx0ecu8gy].[usr:Calculation1:qk]' value='32' />
            <format attr='title' class='0' field='[federated.13zzeb50mq178913kyznx0ecu8gy].[usr:Calculation1:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='background-color' id='refline8' value='#ffffff00' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline8' value='#d8d0eb' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline12' value='#e6e6e6' />
            <format attr='stroke-color' id='refline8' value='#b07aa1' />
            <format attr='stroke-size' id='refline8' value='1' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#7c4d79' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#7c4d79' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13zzeb50mq178913kyznx0ecu8gy].[attr:Calculation_4344847805867122692:nk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805859639298:qk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Min Month (copy)_4344847805859860483:qk]' />
            </encodings>
            <reference-line axis-column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]' enable-instant-analytics='false' formula='min' id='refline8' label-type='none' paired-id='refline9' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805859639298:qk]' z-order='1' />
            <reference-line axis-column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]' enable-instant-analytics='false' formula='max' id='refline9' label-type='none' paired-id='refline8' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Min Month (copy)_4344847805859860483:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#7c4d79'><![CDATA[Date: <[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#7c4d79'><![CDATA[Moving Avarage Rides:	  <[federated.13zzeb50mq178913kyznx0ecu8gy].[usr:Calculation1:qk]>]]></run>
                <run><![CDATA[


<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">




]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13zzeb50mq178913kyznx0ecu8gy].[usr:Calculation1:qk]</rows>
        <cols>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]</cols>
      </table>
      <simple-id uuid='{26D412C9-8D7A-45C8-AF08-94AFE917B25A}' />
    </worksheet>
    <worksheet name='TotalRides'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#7c4d79'>London Bike Rides</run>
            <run>Æ&#10;</run>
            <run fontcolor='#7c4d79' fontsize='9'><![CDATA[between <[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805859639298:qk]> and <[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Min Month (copy)_4344847805859860483:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_cleaned)' name='federated.13zzeb50mq178913kyznx0ecu8gy' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13zzeb50mq178913kyznx0ecu8gy'>
            <column caption='Moving Avarage Period' datatype='date' datatype-customized='true' name='[Calculation_4344847805858594816]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_4344847805859639298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_4344847805867122692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4344847805858594816] &gt;= [Calculation_4344847805859639298]&#10;AND&#10;[Calculation_4344847805858594816] &lt;= [Min Month (copy)_4344847805859860483]' />
            </column>
            <column caption='In Range Rides' datatype='integer' name='[Calculation_4344847805868048389]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{SUM (INT([Calculation_4344847805867122692]) * [count])}' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_4344847805859860483]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4344847805859639298]' derivation='None' name='[none:Calculation_4344847805859639298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4344847805867122692]' derivation='None' name='[none:Calculation_4344847805867122692:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_4344847805859860483]' derivation='None' name='[none:Min Month (copy)_4344847805859860483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4344847805868048389]' derivation='Sum' name='[sum:Calculation_4344847805868048389:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]'>
            <groupfilter function='member' level='[none:Calculation_4344847805867122692:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='background-color' id='refline8' value='#ffffff00' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline8' value='#d8d0eb' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline12' value='#e6e6e6' />
            <format attr='stroke-color' id='refline8' value='#b07aa1' />
            <format attr='stroke-size' id='refline8' value='1' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:Calculation_4344847805868048389:qk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Min Month (copy)_4344847805859860483:qk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805859639298:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#7c4d79' fontsize='36'>&lt;</run>
                <run bold='true' fontcolor='#7c4d79' fontsize='36'>[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:Calculation_4344847805868048389:qk]</run>
                <run bold='true' fontcolor='#7c4d79' fontsize='36'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E8FFD8BF-2018-47E7-B244-0B484AD99F02}' />
    </worksheet>
    <worksheet name='Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_cleaned)' name='federated.13zzeb50mq178913kyznx0ecu8gy' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13zzeb50mq178913kyznx0ecu8gy'>
            <column caption='Moving Avarage Period' datatype='date' datatype-customized='true' name='[Calculation_4344847805858594816]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_4344847805859639298]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_4344847805867122692]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4344847805858594816] &gt;= [Calculation_4344847805859639298]&#10;AND&#10;[Calculation_4344847805858594816] &lt;= [Min Month (copy)_4344847805859860483]' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_4344847805859860483]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX ( IF [Moving Avarage Period Set] THEN [Calculation_4344847805858594816] END) }' />
            </column>
            <column aggregation='None' caption='Wind Speed [Kph]' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4344847805859639298]' derivation='None' name='[none:Calculation_4344847805859639298:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4344847805867122692]' derivation='None' name='[none:Calculation_4344847805867122692:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_4344847805859860483]' derivation='None' name='[none:Min Month (copy)_4344847805859860483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temperature [C]' datatype='integer' name='[temperature C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temperature_C]' peg='0' size='2.44' />
            </column>
            <column caption='temperature C' datatype='real' name='[temperature_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13zzeb50mq178913kyznx0ecu8gy].[Tooltip (Min Month,Max Month ,Wind Speed [Kph]],Temperature [C]])]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_4344847805859639298]' />
              <groupfilter function='level-members' level='[Min Month (copy)_4344847805859860483]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temperature C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13zzeb50mq178913kyznx0ecu8gy].[Tooltip (Moving Avarage Period,Min Month,Max Month )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_4344847805858594816]' />
              <groupfilter function='level-members' level='[Calculation_4344847805859639298]' />
              <groupfilter function='level-members' level='[Min Month (copy)_4344847805859860483]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]'>
            <groupfilter function='member' level='[none:Calculation_4344847805867122692:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:weather:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]</column>
            <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[Tooltip (Moving Avarage Period,Min Month,Max Month )]</column>
            <column>[federated.13zzeb50mq178913kyznx0ecu8gy].[Tooltip (Min Month,Max Month ,Wind Speed [Kph]],Temperature [C]])]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='background-color' id='refline8' value='#ffffff00' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline8' value='#d8d0eb' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='fill-color' id='refline12' value='#e6e6e6' />
            <format attr='stroke-color' id='refline8' value='#b07aa1' />
            <format attr='stroke-size' id='refline8' value='1' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:weather:nk]' />
              <text column='[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805859639298:qk]' />
              <lod column='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Min Month (copy)_4344847805859860483:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:weather:nk]</rows>
        <cols>[federated.13zzeb50mq178913kyznx0ecu8gy].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{4D4E443D-06B0-4236-95A3-AD185AF6B741}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#7c4d79' />
          <format attr='font-weight' value='bold' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#7c4d79' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Data (london_bikes_cleaned)' name='federated.13zzeb50mq178913kyznx0ecu8gy' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
          <members>
            <member value='&quot;day&quot;' />
            <member value='&quot;week&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
        <column caption='Moving Avarage Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
          <calculation class='tableau' formula='50' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.13zzeb50mq178913kyznx0ecu8gy'>
        <column caption='Moving Avarage Period' datatype='date' datatype-customized='true' name='[Calculation_4344847805858594816]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1], [time]))' />
        </column>
        <column-instance column='[Calculation_4344847805858594816]' derivation='None' name='[none:Calculation_4344847805858594816:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='15' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='13' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='40104' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='40104' id='6' type-v2='layout-basic' w='98828' x='586' y='1042'>
                  <zone h='40104' id='3' name='TotalRides' w='18740' x='586' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='40104' id='5' name='MovingAvarage' w='80088' x='19326' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='57812' id='11' name='Heatmap' w='98828' x='586' y='41146'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='padding' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5729' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='11713' x='50878' y='1042' />
        <zone h='5729' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11713' x='63909' y='781' />
        <zone h='3906' id='12' type-v2='text' w='19693' x='50586' y='40365'>
          <formatted-text>
            <run bold='true' fontcolor='#7c4d79'>Drag and hold to select time period on timeline</run>
          </formatted-text>
        </zone>
        <zone h='7682' id='16' name='MovingAvarage' param='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]' type-v2='filter' values='database' w='12079' x='76794' y='391' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='21' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='5729' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11713' x='63909' y='781'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40104' id='3' is-fixed='true' name='TotalRides' w='18740' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7682' id='16' name='MovingAvarage' param='[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]' type-v2='filter' values='database' w='12079' x='76794' y='391'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40104' id='5' is-fixed='true' name='MovingAvarage' w='80088' x='19326' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5729' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='11713' x='50878' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3906' id='12' type-v2='text' w='19693' x='50586' y='40365'>
                  <formatted-text>
                    <run bold='true' fontcolor='#7c4d79'>Drag and hold to select time period on timeline</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57812' id='11' is-fixed='true' name='Heatmap' w='98828' x='586' y='41146'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0CC9B834-D4AA-4B1F-9448-D8A4184616A6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MovingAvarage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[attr:Calculation_4344847805867122692:nk]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[io:Moving Avarage Period Set:nk]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805858594816:qk]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Calculation_4344847805858594816:ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Calculation_4344847805859639298:ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Min Month (copy)_4344847805859860483:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{8A131B1A-946A-4B8E-B152-E2461462BF85}' />
    </window>
    <window class='worksheet' name='TotalRides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Calculation_4344847805859639298:ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Min Month (copy)_4344847805859860483:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDEED6EC-A27F-4426-A430-50DF25BA05D6}' />
    </window>
    <window class='worksheet' name='Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Wind Speed Kph (bin):ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:temperature C (bin):ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Calculation_4344847805859639298:ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Min Month (copy)_4344847805859860483:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08BCB3BA-269E-4119-ADD7-3ED4BA6D2151}' />
    </window>
    <window class='worksheet' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:weather:nk]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Calculation_4344847805859639298:ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Min Month (copy)_4344847805859860483:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9D461E3-7862-4889-BFDB-EF1447C7A519}' />
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[hr:time:ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805867122692:nk]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805870362631:qk]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[none:Calculation_4344847805870440456:ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Calculation_4344847805859639298:ok]</field>
            <field>[federated.13zzeb50mq178913kyznx0ecu8gy].[yr:Min Month (copy)_4344847805859860483:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C02BBCED-77EC-460F-A6C4-F8A4AE5566C4}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Heatmap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MovingAvarage'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='TotalRides'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{DCCB8C09-087E-4561-BD52-B1721306040A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd1xc2X3w/89UhoGhgwBJgBCSQIB6b0hbZa/tXW1N3FuKnceJ/Uri5/nF
      yS+OH8fOk2QT+2d7Y+fnutW76y3a1RattOqoIITovc7AUKf3ep8/RoyEAAmkQUir8369eFHm
      3HvPvTOc773fe865MpfLJSEIgiDcdeTzXQFBEARhfogAIAiCcJcSAUAQBOEuJQKAIAjCXUoE
      AEEQhLuUCACCIAi3gBSWaD3bgmXIDED7+TbG+seuucyp10/OeP0tZ5oY6x+dVZ1EABAEQbgF
      wuEwB/7rLc69cxa7yc5bP9tP69lmfG4fLWeasY1aMQ+acZgdOMwOzINmAt4AXpeXwS4j7dVt
      uB1ufB4fnTUdGDsHkMKRXvwm4xjHXjrKqddO4vf5GewyIkkS+pY+nFYnrWdbGDWM4HV5GdWP
      YOw04rQ6UXznO9/57vweFkEQhI8+KSzRfr6VgC9InDaOoC+ALlXH+feqkMlkHPv9MZIzkuis
      6cTYOYBMJqP64HnyivN4+5n9uKwuLMNmLhysJuALcOylo2z42EbkCjkNx+tZXLyY9qo21t2/
      gRe//wIFZUs4+epxdCk6LMMWPvjV++StzOeV//N73DYX8Qnx4gpAEATh1pGhS9PRcrqZ/NIC
      ACxDFnY+WUFiSgILluRgaOnD0KpnyarC6FK5RQsp21lOKBjGbDSx/dGdxOvio693Xezk4uEa
      XDYXw71DZOVlceHgeYrWLWOw28hI3zBhSSIUCpFbtJCH/3Ifg91GEQAEQRBupYLyJXhcHuK0
      cQCs2LSC5/7xdyCTkbU4C4VKiTpOjSZBM+Xy6x/cyO9/8AIOswMAn8eHw2zny//yJ+z5zL10
      1XZStLaIuqO1FK1bhnXEisfpIRwKI4Poeq0jVmRiKghBEIT55XV5idPGIZPJCPgCIAOVWjVl
      2VOvncQ+ZmNEP8IX//nLU5YJh8IEfH7itBrC4TBBfxC1Rj2xTDgsAoAgCMKdxO1w47Q4SctJ
      Q6lS3tS6RAAQBEG4S133HkA4FGagYwBJik2c6G8zUPthzU2twzpiZaBjgIGOAUYNo4SCIQB8
      bi91R2sJ+oNYRyxUzqIPLUAoGIqud6RvOHIpdonJOEZbVeuc7M/tbtQwGj0uAx0D+L1+AAL+
      AK1nW2g920LAH7jOWmKju66LljPNt2RbAM2VjVhHrLdse4JwK133+sHj9PDsP/yGv33uf930
      5QaAyWiiu66LNfeuu+F1nHv7DB0X2tGl6XBanEiSxBe+/yUkCZpONbJiUzEum5vmM81sf3Tn
      jNfrdXl59h9+Q1ZeFn6vH4/TwyN/+SiFa5ZiGbLQeaGDFZuKY74/t7tX//X3KFXK6Pv/ib94
      mIyFGbz4vefweyMN/7kDZ/jcP30RuWJu+xUM9w7jMNsp2bpyTrczru18GwmpOlKyUm7J9oSP
      vlOvnUSToCFzcSbapARazzYjk8nY/thOZDLZLa3LDbfo1hELjScb0SRoKNtZjiZBw9jAGD63
      F5fNjWlglGXrl5OxKBOA3sZeRg0jWAbN0XVIkkRzZSPmQTN5pQXkr8wHoOVMM1n5C+iq7USj
      1VC2qxy5fGLDsmr3GnY9WYEkSfz2735FT303pTvKWb1ndfTu+ji/109HdRvLNqwgHA5T++FF
      QoEQq/esJjFVN2nfvvDPX0apUlL5xikq3zhJ4ZqlZOUvQKFURMtMuT9hiYYT9VhHLCzbsIKc
      whwA+pp6Ge4dJiElgaJ1y4iLj5u0zdtV0B/EPmbnGz//JgnJCdG/d1xox26y8+c/+gsAfv7N
      n9FV28my9csnLG8ymnBZneStzMdtd9NT38XyjcWo4lR01XaSlZdFYopuyuNmMppoPt1EfGI8
      a+9bN+H4A1iGLYzqR1i+cUX0by1nmknNTqW3oYf0hRlk5WXReq6VxJQEVm4vQyaTTfrsxmnj
      aK5sYtmG5ag1atwON/qmPoq3lFBesYr03HQ8Tg/9bQYSUxLpbewle0l2tJuey+aivboNuVxO
      SlYK2Utyop/BcDiMvrmPkb4RlGolJVtXoknQTLu9Ef0IhlY9oUCIpeuKSM9JZ2xgDL/HR2Kq
      jv42Ayu3lU5ZDiJXa31NvSSmJqJJ0FBQtgSA3sYe+pr6yF6SPekkRri15HIZa+5di1Kl5Oxb
      p9nx+C46azoZGxgj81J7ecvqciMLOcwOfvN3v8JpcdDX1Mvz3/0doWCIjup2Xvzfz9N4op6+
      pj7e+M/XADj79hn2/+QNbKM2hnqHous5+sKHnH7zNKFQmDd/9BrNlU0AvP3MW7z+9KuYBsb4
      8PlDtJ2bnHrxub2RBqKyEYfZQc7SXAJeP2/9dD9cka2SJIl3fv42fc16lGolL37vOcxGE26H
      i+e++2w0fTQVrU5LwB8EYLDLSOXrp665P4ef/YCG43Uo1Spe/uGLjA2M0Xmxk7d+uh+f20tH
      dTtdtV03csjnjWXYAjJoPddCy9lmPE4PAEPdg+SXFqCKU6GKU5FfWsBQ9+Ck5e0mO+/8/G0A
      2qvbOPDM25GGKxjizR+9jiRNfdxso7ZI1zgiaZ93f3Fgwnq9Li8v//ClCWk6iHx23v/lu5gG
      zfzh31/htaf/gNlo4t1fvIOhRT/lZzccClP1zlk6azoAaK5souFEHQDHXzrKWP8Y5kvrO/L8
      YUzGMV75l9/jtDhx21386tv/TWdNByP6EV7+4Uu4bM5ofRxmBydfPYHb7qL1XAtv/OcfkMlk
      027vyPOHsQxZGOsf5Xff+TU+t4+O6nYqXz/Fb7/zKxpO1E9brrexl9/9/a8Z0Q/TeraFt3+2
      H4i8d+/+4gAabRzHf3+UuqO1N/GJEG5WcmYKFw9doPbDGuQKOTKZjISUBLwOzy2vyw1dATSd
      amRJeSF7v/pxJEniF9/6LwytegDKdpbzsT95CJPRxLP/728AqH6vioe/sY+CsgLqjtbSdbED
      SZKoOXSBL/7gK2QszCBjYQY1h6pZub0UgD/++8+QmKrD5/FP+Ica13iqkc6aDpwWJ6v2rCE9
      NwO/xzehTMAX4MQrx7CN2vjsdx9msMuI3+Nn71c/DoC+qY+B9n7yLl15jDv4q/fwurz0NvTw
      ia9/atK2p9uf2iMX+dOnv4YuTYfL6qT1TDO6NB2aRA15K/PZtm/HpLPY251SraR81yqMl+63
      HPzVe3zxB1/B7wtMuJKJi4/D75t8H2DxisU4rU5sYzYMLXrKdpWjb+5DrVGTlJGMLk035XFT
      qBQsW7+M7ft24HV5+MnXfsxDf/5JABwWB2/99E2Wri2idEfZpG0+/jdPkpiqQ9/Uy96vfpzc
      olxMRhNuuxtjp3HKz27x5hI6qttZua2Ujup2ynaVT1pvWnYan/nHzwPQXdeN2+HC0Gogc3Em
      T/ztUwA0n2qcsExyRjJPfPsphnuHSMlK4fCzhwCm3d4T336KwW4jHoeHjgvtmAdNAPQ29PDY
      3zxB4eql05a7ePgCWx/exvZHdzJqGOX3P3gBgLojF9n5RAWl28tIzkrhwsFqVu9ZM4tPgRAr
      AZ+fgvIlxOviOf3GKeK0GjxOD0PdgxOuZG+VGwoAbruL5Es5UZlMRnJmMm67e0KZ8VRWOBzG
      YXGQuXjipU3AFyDgC0RzqylZKZPWceV6rrb+gQ3serKCgC/Ay//yEhcOnqd816oJZVxWJ7WH
      L7L5U1tRqpR4HB6cVie/+/tfAyBXyKe8AkhfmMHpN06x5VNbJ10uX2t/gv4grz39SjSPt2Jz
      CaU7y3FanRx5/jC2URuP/NWjFJQvmXqnbkOpC1KjDa8kSTz3j7+jo7qd+AQNg8OWaDmn1RlN
      3VxJqVayuDgPfVMvxk4jT/zPpzjwzFuo4lQUri6c9ri5HR66LnZG36usvCx87kiAH2jrx+vy
      suPxXdes+5X5VJlcBrLpP7vFW0o489YZXDYXAx397PvWY9dZd+S7x+EhOSt12nIDHf289vSr
      FG9ZiUqlJHxp7paptud1e/nN//NLFhYtIi0nDUkiWr50R1m08Z+unMfhIWWKurgdHipfP0n1
      e1UA0f0Xbj25QkHHhSZ8bh9lO1ehTdJS+2ENKVmpJKYk3vL6zDgABLx+wqEwcoWczLwszr9b
      xc7Hd+F1RiYquu8LD2AbtU1aTi6Xk5yeTE99F2U7V+GyuQBQa9SkZKXQUd1OydaVdFxoJzMv
      a1aVlyQJv9dPOBiKNg5XSlmQyiN/uY8X/uk5cpbmkp6bjlwhZ9+3HiclKwWH2T7lTZcNezey
      cNkiXvmXl0jLTadky+Ubjtfan6T0JLbt20Hx5hL8Xj/2MTtmo4n1D25k+6M7Of7yMVrONN9R
      AaCvqRdJgvzSSA7faXWiTdKStCSHM/tPYxuLvOe9DT1semjLlOtYsqqQumN16NJ0pGWn4XV5
      6azpYNeTu6c9bgMd/SRnJvPpf/gcqjgVQ92D0RGMxVtKyCnM5Y3/+ANf+Ocvz+ofZ7rPbmp2
      GilZyRx76Qj5pfnTjsK8Wk5hDuffq2LZumUEA0H8Pv+E13vqe1i+YQUPfPFB+tsMnH//PMCU
      2zO06FEoFHzyfzyM2+7m4ocXo+uRyS9/Tkf7RqYsl12YQ9W759Cl6+hr6ouWz1iYgSZBw31f
      eAAkGL4ibSncWgqlgjX3rJ3wt+n+b26FGQeAH/3JfwBQtH4Zj37rcZpPN/HM//gJwUCQtfet
      I3NRJp0XOqZcdtdTu3n3Fwc4+uIR1Bp19Oz5gS/v5a2fvMmxl44ghSWe+rtPz7jila+fpPL1
      k6g1avJK8lj3wIYpLxcyF2fxia9/ijd/9Bpf+P6X2fTQFn757f9Gm6RFCod54tt/NOlGsAxY
      XLyYR775KG/852uoNepIoJBde38e/MrHOPBfb3HkhQ8JePzc87n7kMlkvPj950lM0eGyOXn4
      G/tmvI+3A5lczjvP7Mft8BD0B1mxaQXFW0pQKBSs3FbKL771DADlO1exuHjxlOtYsqqQI88f
      ZteTFQAsWrGIplNNLC7JA6Y+bqU7ymg/38ZPv/5jVHEqtElavviDr0TXWV6xirGBUV57+lU+
      +4+fnzq1Jpv8kVi5rXTKzy5E0jLHXz42Me0nk017FQpQuGYpWz65hbNvnyErL2tSZ4WC8iW8
      /IMX6W2M3Ji90tXby8zLIuAP8vNvPoNao572/tR05bbv24Hf4+PYS0cnXKHueGwnr/7bK/z0
      6z8mHAxTvHUl2VNcrQl3nxseCCZJEg6zA5lchm6KnjRX83l8BP3BCT1JINLLxDZmJSUzFYXq
      1uTHQ4EgXrcPbZL2hrtdTbc/UljCbXcRr9NGu0QGA0GcVieJyQkopxnefTuTpEh6Qa6Uo9FO
      PDO2m+wAJKUn3dw2pjhuEDnOUlia8Rn5jLY1zWc3GAjidXqI12lnfK/GaXHgdflIX5hOf5uB
      l77/At/85V9PGHbvdXkJ+Pzo0iYeo6m2FwwEcVocJGekTDjrv9pU5UYNI2h1WrTJCZzZf5rO
      mg4+/70vRvfZ4/Cg1qjuyM+gMDfESGBBuAmj+hHe+NFr2MfsaBI17HyiYt5usDaebODoi0fw
      ujykZqfxsT95iIXLFs5LXYQ7gwgAgiAIdykxHbQgCMJd6roBwNBqmPa1aw2imq2gP0D9sbpo
      v+fIvDz90dftJjtdtZ30NvbScaEdiHSHazzVMKGOtUcuYh2xUH+sNvrszSuXATB2DhC8NMDL
      0Kqn9WwLQz2TBzFNx+PwMHrp2Zsep4eGE/V0XGhHkqRLj2HTR8uOjw8wDYxRf7yOYCBI0B+M
      zqHjuTT4o/5YLR6nZ8L+XLkMgG3MhnU0Mi/NUM8grWdbouMvBEEQZuu6AWC4dwjTwBhOa2Qw
      lsvmYkQ/QigY4tRrJzEPmvA43ITDYbwub6QrnNdPKBjCbrJHG/SAP4Cx00g4FMbn8eGyOhnR
      j0S3U/3+eZasLqT+WB3hcJgLB8/TWdMZfb27tgttkhaHyY5CqaCnvpv+VgMFpQXoW/rwur04
      LA7iE+MxdhkpWrechhP1jOhHJizTXddN3dFafJcGjRlaDSwqXkzqgrTotqzDFsyXgofX5WWs
      fzTa3dNlczLQ2Y/t0gRhXpc32j9b39xH69kW6o9dHmk52GUkY1EmjScbKChbwoWD1Yz1jyJX
      yFlUvBh1vBpJkgj4Agy090f3x+1wT1jGPGii6VQjg51GINLtclHx4uhUG4IgCLM1o9lA7WYH
      1e9V4TA7qDl0AfuYjfbzbfjcXhxmByP6Efrb+qk7cpG2qlbqj9VhG7XSerYZQ6uBoZ4hzr19
      FpCofv883bVdtFe301XTge3SGa1cIUeXqiOrIBuX1cWmh7agTdJG6xEKBhnVj7Bsw3KWrCpk
      1DBC0Xjfa4+POE0cXRc7WbqmiJVbSxnRD5OYqmOo2zhhmcLVhdE5hyDS2DedaoxOcRD0Bxnt
      H6W7ruvS9A8ncVgcVL9fhXnQRP2xOgLeyyNeUxek0lbVSm9DD9lLcijZupIFBdnR1we7jCSm
      JJCzNJek9CRkMnDZI0G080IHMrmMoe5BsgtzJ+yPz+WdsExaTjqrKi4PdHNaXZFpMC71whEE
      QZit644DkCvkLClfApJEf7sBv9eP2+5Gk6AhNTuN/NICwuEw59+rQq2Nw+v0Eg6HMQ+aCQZC
      qMMSfo8P64iVsf4xlOrIJpdvWsGofjQ6l0s4FLkXHfD6omXGDfUMsqAgG7vJjt/rR6lWIpfL
      MXYO0NvYQ8VTe5DJZQQDQZRqJfXH6lDHq1l3/3qaTzdNWOZqH/+zTxAOhal8/SQ7n6jA6/Iw
      ahhFoZDjtDpJzkxhSXkhpgETA+0DrL1vHR6nF9PAWHQd5btW0XGhHWPXAEvKLz/HMxQMIVco
      UKpV0SmUwyGJpWuKWLqmCGOXkc6aDuwmO+sf2DBhf9wO94Rlrnbf5+9HkiROvHKcrPwF13sb
      hVvAY3XhsgdRJWivX1gQZsA9aiKnOPv6BW/QjAaC1R+vY6x/jB2P7WSw04gkSWiTE/A4PVw8
      XEPpjjJcFic565Yx1j+GRqshZ2kuhlZ9pF9ykpb03DRAijzIeIp+RylZKZx/rwq33Y1ao+bi
      4Rr62wwkJCfgcbhZ98AG0p1eTr9ZiUKlYPWeNZzZX0lW3gJqDl1gQf4CFlxqCFvPNlO4poiG
      43UUrVs+YZnuum56G3uxmx0sW7+ctqpW4uLj0F3qx+62uwkGgoRDl4LFpa7YMhnkLsvl3IFz
      KFVKFhREttVd14VtzIbb7iYlK4XWcy30txlQqpTEaeMoXLOUxJRExvpHOf/uOdJy0uhr6mWs
      fxS7ycGqilW4rE5kMhm1Ry5G96e8YtWEZUb0I3TXdmEeMpGanUbXxQ60SQmTZj4V5pfdHEA1
      xZxIgnAjfPbgnK7/ut1AJUki6I+cWctkssjvgWD0eZV+jx91vHrqZcORp9CPzyMf8AVQxU0/
      CMXn8V0edXtJOBSm9shF1t2/HoicVUthadJVwoWD1ax7YP2UA7umW2Z8/wK+wISBO1PVY1zA
      H0Aul08YKOT3+lEoFZMGD1W/f54NezdGt+P3+qMTqAX9QWQKGT113WQsypxyvvmrl7levYX5
      5RiyMqT3okm9uUFxgjDOru+n9N7l1y94g657BSCTySY02jKZbMLDiqdr/CEyf4lSfnkT12r8
      gSkbOp/HN2GWvOlGaOaX5k87qvdaozplMtmkRvRa8/VP9aDm6RrhgrKCCdu5cr3jwSglK2Xa
      h41cvcz16j2Xjh07RjgcRqVSsXnzZg4disxqWVFRQWLirZ/EShCEmycGggkzEggEUCgUHDx4
      kIULF5KdnY1Op6Ompobt27fPd/VuCx6ri8Fej7gHIMSMz2KmaNOiOVu/GAgmzIjH4+HAgQNs
      2rQJt9uNTqcjPj6eQEDku8cFvQFC/rnN2Qp3F59j8hT5sXTzD/kV7gpHjx7l4x//OCqVCrvd
      jl6vJykpidTUVDweDxqNBo/Hg1Yrzn4F4U4hrgCEGUlKSuLs2bNUVVVRUFCAzWaju7ub8vJy
      +vv7CQaD9Pb2znc155VSo0IxRUcDQbhRcbq5PaES9wAEIUZELyAh1ua6F5C4AhAEQbhLiQAg
      CDEiUkBCrM11CkgEAEGIEdELSIi1ue4FJAKAIAjCXUoEAEGIEZECEmJNpIAE4Q4hUkBCrIkU
      kCAIgjAnRAAQhBgRKSAh1uYyBRQKhcRUEIIQK+MpIFXCfNdE+KiIRQpIkiTcHg8ulxuXy4Xz
      0pfH6xUBQBAE4aMgHA7j8Xhwud243OPfXbjdHiTp8oQP2vh4dImJZC9YIAKAIMRKJAUkbgIL
      sTNdCsjj8mCz2XG6XLh9HjxeL27PxIY+XqNBq9WSnppKgjaBxIQEtNp4FIrLz0cRAUAQYkSk
      gIRY81pdmIwmxoxjmEdM2Cx2HA4nYYWEOjGOuEQNyRnJJCXpyMxIRxsfT4J2ckM/HREABEEQ
      5pHL5sBlteM023DZxr87cFpsxMvlmJ+3o06MIz5Zy4LCbBYVLiI9N530rDSS05JRKm+8GRcB
      QBBiRKSAhOkEA0HsoyZsYxZsIyZso2bso2YcZivhUGhCWW1SItpkHZl5uegS49m6Po8F+dmk
      ZqfO6Kx+NkQAEIQYESmgu1s4HMZlteMwWXFa7TjNVqwjJuyjZpwWW7ScTCYjMS2FlKx0Fq4o
      JDEtmYRkHYmpySSmJqG44ozeru+ndNs8PhReEARBuMw+ZsE6MobDZL3U2NsiaRurfcJNWIVK
      SVJ6KumLslm6rpSkjDSSs9JJSk9BHuMz+RslAoAgxIhIAX20BP0BLEOj0S/r0BiW4VGC/svP
      wY7TxpOYlkxmXi4Fq4rRpaWQmJZMYmrkrP5mzfVcQCIACEKMiBTQnSPg8+NxuPC63HicrsjP
      TjdeZ+R3+5gZh8kaLa/SxJGancnSdWWkLsggLTcLXXoqqjj1nNZTPBReEARhlrwuN06LHZfV
      htNiw2G24bY5It/tDkKBqa/U4nUJaBITSM3OZMnqElKzs0jLySQh5aP5mE8RAAQhRkQK6NYK
      BYOYBoYx9Q8x1j/IqGEQt80xoYw6Pu7SzdVkUhZksHBFIQnJOuJ1iWgStcQnam+bfPxURApI
      uC1YrVZqa2vZvXs3kiRx+PBhNBoNxcXFZGZmznf1hLuAy2pnuLefsf4hxgxGLENjSOEwAAkp
      SWQuziF9y1p06akkpOjQpaXMeYrmTicCgDAjAwMDhC71V7bZbGRmZrJmzZp5rtXtxWNzE3B5
      USXM7Vnb3SIUDDLc04+xo4f+tm6c5khXSqVaRfrCbEp3bCB9UQ4Zi7OJT/xo3nhxGE3Aojlb
      vwgAwoyUlpYyNjYGQDAYZGxsjIMHD7JhwwbS09PnuXa3h/hkLSqLbL6rcUdzWe0MdPRibOtm
      sFtPKBBEoVSQvTSfkm3rySpYREpWOjLZ3XGcdblz+78lAoAwa2lpadx3330EAgEqKyvZvXv3
      fFdJuEO5bA7GDEbG+ocY7OzDOhw5yUhMTWbpujIWLl/CgiWLUapEUzUXxFEVZqSqqgqLxcLZ
      s2fJy8ujtbWVQCDAxo0bqa+vp7i4mIaGBtavXz/fVZ03H/UUUNAfwOty43V58F367nW5Cfj8
      qOJUxCdeurGqSyA+MQFN4sTjEA6HGTMMMto3wNjAMKN6I16nCwC5QkFWwULWrdnFwhWFJGem
      zccu3nbmOgUkc7lc0vWLCYJwPR6ri8Fez20fALwuD9bhUczGEZxWO0gSAb+fUCByj8fv8SKF
      w4TDYfweH8FApOGfruvkdGQy2aVulZGeNpah0eg6dOkpZCzKIX1RNpmLc0nNzrite+PMF5/F
      TNEmcQ9AEIQb4LTYsAxFGvvI92Hcdmf0dXW8BplMhipOHZ2DRh0fh1wuR65QkJyVjlKtRJOg
      JU6rIU6rRZMQH/n90ndVnJqgP3B5QJXLjdvmiAyqcrjwuNyEQyGK1peTXZhHZl4umoT4+Tok
      whVEABCEGJnPFFAoGMQ2YsI8OBo5u7/03e/xAZGz8aSMNLIKFpGWk0VabhYpCzJj1hAr1Sp0
      aSno0lJisj4hQvQCEoQ55vP5sNpsBIKTUxyhUJhw+PJ0vQoUKBUKlAolarWaOI0ajTZyFj1V
      LyCvy0PA68Pn8Ua/+z3eCZOGXY9CoUCliZvwN6VKiXV4DMvwGJahUeyj5ug6FSolqdmZ5Jet
      IDU7k7ScLFKyM8WN1DuQ6AUkCDHm8/mwWG1YbTYsViser3dGy0lhCb/bh98Z+fI5x3/2Ipfk
      KCU5IW8Yr9+P3+PD75nZem+GNllHWnYmi0uKSM3JJHVBJrr0lLumm6Rwc0QAED7ygsEgJrMF
      i9U6ocFXKpWkJCexKDeXlJRk4tSTR40qFIroQzgkScLn8+P3+vC6vXhcHtw2N06rE6fZgXvY
      jtPiJVGpRB2vQaONRx0fhzpeg1pz6Xu8ZtZpl1AwRMDnn7hP/gBJ6Smo4zU3eFSEO4FIAQnC
      DQoEgxj6B+gfGCAYCqFQKEhJTo42+IkJCbM6U5bJZGg0cWg0cSRNMTnYndILSLhziBSQIMxS
      KBSi3zhIn15PMBQiMyODvEULSdLpRGpEEK4gAoDwkREOhxkwDtJrMBAIBEhPS6WwoABdYuIt
      2f5HfSCYcOuJFJAgXEc4HMY4NESf3oDP7yclOZmiwiUk6W7+iUyzIeYCEmJNpIAE4Rr8gQAX
      Ltbi8XpJTkpiZfEKUlNEX3RBmAkRAIQ7WjAYJDExgWVLl5KRPr/zx4gUkBBrIgUkCNegjY+n
      fOXK+a4GIFJAQuzNdQpIPqdrFwRBEG5bIgAIQoxEUkCe+a6G8BESSQHNHZECEoQYESkgIdZE
      CkgQBEGYEyIACEKMiBSQEGsiBSQIdwiRAhJiTaSABEEQhDkhAoAgxIhIAQmxNtcpIBEAhBmx
      Wq0cO3YMiMyLf/LkSY4dO0Zwiqdo3a3ik7WoxLNuhRgSKSDhtjAwMEAoFHk0YkUqJRMAACAA
      SURBVGdnJwsXLqS8vJy6urp5rpkgCDdKBABhRkpLS1EqI30GTCYTubm5pKen43A45rlmtw+R
      AhJiTaSAbpAUnvlDt4XZ0el0WCwWXC4XGo14JOE4kQISYu22nQ5aCkv0NvXSUd2GscuIfcyG
      FJZQxanIzMti5dZSSrauRK64sRhj7DRS+cZJAJ7426dmVJ/mM01cPFTDYJeRYCCIUqUkq2AB
      ReuWse7+9cQnXvuf0+f28d4v34kGD3V8HA/92SdmXOfKN07htFz7jHjp2iKK1i6b8DdDq576
      4/WM9A5hN9kBiNPGkV2YS9mOMorWLZu0noO/fm/G9VpQkM2ae9bOuPxUqqqqsFgsnD17lg0b
      NnD48GEkSWL37t3U19dTXFxMQ0MD69evv6ntCIJw69xwAHjxfz+HvkU/5Wu2URudFzo4/34V
      T/2vP75uw3sll83FubfPcO6dsyBBxqKM6y4T8Ad480ev0VnTOeHvwUAQY8cAxo4B0nLSKNly
      7VkjT/7hBC2nm6O/a5NmN63vmf2VBLyBa5bRJiVMCABv/OdrtJ5rmVTObXdjGbLQcrqJZRuW
      88hfPYpSdfntqvngwozrVbyl5KYDwKZNmyb8vnfv3ujPq1atArjrG38xHbQQa7ftdNBuhxul
      SsmyDcvJL80ndUEaMoUct91F44l6Oms6Gew0cvBX7/HIXz163fV5XV7Ov3uOqnfP4ff4Z1WX
      d39xINr4L9+4gtV71pCclYLf7WOgo5/myqbrrmNsYIzq96tQqpQsXVtEW1XrrOrgtDqjjX/x
      lpJpg0fO0pwJv7sdbuQKOWU7y1m0YjEpC1IBsI1YqT1ykYH2fjqq26l8/RQVT+2OLle8peSa
      9XHbXNEAnZWXNat9EW6MGAgmxNptmwLa9NAWlm9cMeXZfcmWlbzz87epP1ZH67kWAv4AKrXq
      mus7/vLR6FltyoJUMhdn0lHdft16dNd1RRv4ij/aw7ZHtk94feHyRWx6aAvBwLW7K37w6/eQ
      whJb9m1Fm5ww6wBgGTJHf77v8/ejS0ua0XKr96zh4W88QmLqVY8vXJlP6Y4yfv/PL6Bv0dNU
      2TghAOz75mPXXO/hZw+hb9ETp41j/YMbZ7wfgiDcPW74JvDqPWuumdop2RpJt0hhCb93Zmf0
      ujQdD37lY/zZf3yNBQXZM1rmwsHzAOQuWzip8b/SlemTq7Wea6GvqY/kjGS2PLxtRtu9mnkw
      EgBUGtWMG3+Asp3lkxv/SxRKBcs3rgDA65x57xKXzUXt4RoA1tyzFk2CuFF7K4heQEKs3bFz
      AQ12DwKQkJKINvH6OdG1967j3s/df82G+mp+j4/uum4ANuy9sbNcv9fPh88eAuDez99/3SuV
      6ZgHI29Uek5sL9nGj2Pm4pmncS4crI5edW3+5NaY1keYnkgBCbF226aArqXxZAOn/nACgIqn
      diOTX/+fIit/way3M9gzSDgUBmDJqkIg0pPHNGgi4AuQuiCVpPRrn42f2X8au8lOQfkSVmwq
      nnUdxo1fAaTmxOa5tOFQmKp3ztFU2YhcIWfXkxUzWs7r8lL9fhUA5RWrSEhOiEl9BEH46Lnp
      ANDfZiAUCuO0OBjVj9B+vg2T0YRCqeCBL+1l9Z41sajnlGyjNiCSdumu7aL+WC36Fv2EMQA5
      Rbnc+9n7WFycN2l5y5CZc2+fQa6Qc/8XH7ypupgv3QPoON/Oj//0PwDQJGhIykhm4bJFlO0s
      I+0aVwd9zX1IYQmnxcFg9yBt51pwmB3EaeP4xNcfJr+0YEb1qP3wIj63D5lcxtZrpMSE2BO9
      gIRYu217AY177elXcdvdE/62fOMK7vnMvaRmx+ZseDoBX6TXTcAb4O2f7Y/+XR2vjtx3kGCw
      08gL33uOx/76CZatXz5h+cPPfkAoGGLTQ5vJWHj97qbX4rI4gUjX0/Ebzm67G/Ogmd6GHk6/
      eYptj+yY9kz+xe89N/EPMlh3/3p2PL5rxmfxAX+Ac2+fAaBsR/l1r36E2BIpICHWbvsUUFpO
      OtokLV6XF+elRrD9fBsOi4OKJ3dHUzNzYTz9I1fIKd5SQsnWUhYXLyY+MZ5gIEjbuVY++M37
      eF1eDv7qPZasKozeY+is6aCzppOElER2PLbrpuvy6X/4LKbBiTdsPA4Pg11GWk43E/AHqHz9
      JAnJCax/cMOk5cfHO7isLjxOD0hQc/gC5iEzez59D9lLciYtc7X6o3W4HW6QwbZ94uxfEIRr
      u+kA8Ll/+kL0Z7/Hh75VT83BC3TVdvL7H7zIns/cy5Y5uhGpUCoAUGvUPPyNfRNeU6qUlO4o
      I04bx6v/+jIOs4Oe+m6WrV9OMBDk8KUbv3s+fQ9x2ribrktW/oKp72Pcv56tD2/jpe+/gN1k
      58z+yikDwJ/8+59Hf3Y73PTUd3P+nXP0NvTw2+/8mke/9Xi0R9BUwqEwZ/ZXAlC8qeSa6SZh
      bogUkBBrt30K6Erq+DiK1i6jaO0yKl8/yYlXjnP0xQ8pWrfsplMsU9GlRbpPel1evC7vlN0d
      i9YtIz4xHo/Tg8loYtl6qHrnHJYhMzK5jI7qdjprOiYsYxmyAJEbym/86DUANn18MwuX39gb
      kZaTzuZPbuXQbw/iMDtwmO3X7Cqq1Wkp3V7Gyq2lvPWzN2mubOLtZ/bzFz/9y2m7dDaebMBh
      jkxDsfWRG+vKKtwckQISYu2OnQ5668PbUWlUIEF3bef1F7gBOYWX0yKG1qmnpQDQJEYazdCl
      3HxPfaTrqBSWaKtqpfVsy4Sv4d6hSPlgKPo3u9l+U3VNykiO/jx+7+J6ZHIZ93zmXgD8Hj/9
      bYYpy0lhidNvRs7+l64pmlG6SBAE4ZY8Ezg8RzNzJqbqyCnKZbDTSM0HFybd5IVIWmq8t9D4
      NAsbP7bpmlMpGFr0tJxpRqVRsefTkQY4+xoD03xuH2qN+prdXUf6IkFFJpehm8XNWemKQzfd
      cWw91xIdiSzO/uePSAEJsXZbpoDaqlpxWpyUV6xCrVFPWebMW6ejc+PMdFTvjVj/wAYOdL5F
      d10XFw9fYO19EyckO/XaScKhMEqVkoKyJQDXzKWPaznTjEqtYv0Dk/P1V+uu76LqnXPsfHwX
      S8oLJwWC/jYDZ9+K9M5ZUl4YHWzWU9/NcO8wa+9bN+V9CCksUfl6ZEZUZJC9ZOrjeGb/aQDy
      SvKm7O4q3BoiBSTE2m3ZC8hpdfLBb97n6EsfUrhqKbnLFqJL0yFXyHGYHXTWdNDX2AvA4uLF
      FFynD7vT4qDyjVMT/jbYZbz0mnPS1Md7/vge1PGRBrNsRzkNx+voa+rj/V++R29DL8s3LkeS
      oOVsM50XIvn9zZ/cMqeDoowdA7z8w5dIzkwmv7SApIxkwqEwwz1DdNd3RafK3nMppQPgdXs5
      +uKHnHz1OMVbSlhQsABdehJSWMI6YqXtXAtDPZErh1W710zZrbOzpiOashKjfgVBmI0bCgBp
      2WnEaePwuX20VbVOO3FaXmk+j37r8euOBPa4vNNOb+yd4rUdj++KBgCZXMa+bz3O60+/ir5F
      T+u5lknTK5fuKItJV8/p5JXks2r3ahpPNmAbtVF/bPJjErXJCez75qMTZuZMzkhBm5yA2+ai
      8WQDjScbplx/2c5y9n7lY1O+Nn72n1OYM+VzA4RbR6SAhFib6xSQzOVy3VCC3u/101PfTV9T
      L+ZBMw6LAyQJrU5LxqJMVmwuoaCsYEbr8jg9NJ++/pTN41btXj1pzh4pLNF2vpWmU43RUbmZ
      izIp21k+64ZxRD+CoVWPUqWc1Uhml9VJ67lWjJ0D0Qe7JKUnsbgkj5XbSqdMl4WCIXoaumk/
      34512IzL5gIi9zcW5C9g5fbSaW/q+r1+Gk7UA5BblEtOYe6s9lOILY/VxWCvRwQAIWZ8FjNF
      m27DACAIwkQiAAixNtcB4CP7TGBBuNXEdNBCrN2x00ELwt1G9AISYu2OHQgmCIIg3N5EABBm
      xOfz4XQ68Xq9ALjdbhyOyNQTgUBkvEcwGCQUCs1bHeebSAEJsTbXKSARAIQZOXr0KO3t7fT3
      92OxWDh58iTV1dUMDAxQWVlJIBDgww8/JBi89rOXP8rik7WoEqZ/TKogzNZtORBMuPt4vV7s
      djvZ2dm0t7ezc+dO4uPjOX78OC6Xi/3797N3717i4m5+ZlVBEG4NcQUgzMgjjzxCRUUFtbW1
      qFQqfD4fwWAQuVyOVqtl6dKlDAwMzHc151XQGyDkv3uvgITY8znc1y90E0QAEK5LkiQ++OAD
      zpw5g0ajYcWKFZw4cYIPPviA0tJSZDIZa9euxWAwYLFY5ru6giDMkBgIJsyIJEn4/f5oiicY
      DCJJEiqV6jpL3j3EQDAh1sRAMOG2IJPJJuT3lUqlaPyvIlJAQqyJFJAgCIIwJ0QAEIQYUWpU
      KNSiY50QO3G6uU0nigAgCDEiUkBCrIkUkCAIgjAnRAAQhBgRKSAh1kQKSBDuECIFJMSaSAEJ
      giAIc0IEAEGIEZECEmJNpIAE4Q4hUkBCrIkUkCAIgjAnRAAQhBgRKSAh1kQKSBDuECIFJMSa
      SAEJgiAIc0IEAEGIEZECEmJNpIAE4Q4hUkBCrIkUkHDb8fv9vPPOO7zzzjs4nU7Onz8PwOnT
      p/F4PPNcO0EQZkpcrwqz1traysaNG9HpdNTU1BAIBOju7kar1RIfHz/f1Zs3kRSQuAIQYkek
      gITbjtvtRqfTER8fTyAQwOFwcOrUKUpKSua7avNKpICEWBMpIOG2s2DBAvR6PYODg6SmpqLT
      6Xj88cc5fPgwkiQeMS0IdwoRAIRZKygowGaz0d3dTXl5OQUFBWi1WtauXYvVap3v6s0b0QtI
      iLW5TgHJXC6XOGUThBhwDFkZ0nvRpCbNd1WEjwi7vp/Se5fP2fpFABCEGLKZAvNdBeEjRKmS
      kZA0d1eVIgAIgiDcpcQ9AEEQhLuUCACCIAh3KREABEEQ7lIiAAiCINylRAAQbgujo6MzKhcM
      Bunt7Z3yNafTydDQEAAWi4Xa2lrq6+tvuE4+n4/a2lpqa2txOBwTXuvu7p5UXpIkurq6pl2X
      wWAAwOVyRdcbCMys11BnZ2e0rMlkYnh4eEb1H9/m1YaGhnA6nQAYDAZqa2un3KeZ6ujowOv1
      zqjsldu+UjgcnlCH+vp6amtrsVgss6rLlccnHA7T2to6o+Wu9dmyWCyYzWYAhoeHqa2tnfF6
      pyJJ0ow/83P5PooAINwWmpqagMg/7/g/hsfjYWhoaELje+rUKZqbmyct73Q6uXDhQvSfsrGx
      kYKCAgoKCm64Tg6HA7/fz9KlS4mPj8fj8WAwGJAkiYGBAQYGBnC7Lw/Vr62tpaqqatJ6QqEQ
      p06doq2tDYCuri7S09MpLCxEoVDMqC719fXR/a6rq6OlpYVwOIzRaIweH4/HE20sr97mlfr6
      +jh//jwmkwmA9vZ2CgsLyc7OnsXRuUySJFpaWmhoaAAiU4UYDAZ8Ph/hcBiv1xut19XbvtK5
      c+eoq6sDIkHSZrNRWFhIYmLirOrT0dFBTU0NAD09PZw7dw4Aq9XK4OBgdP3jdR033WdrZGSE
      6upq+vr6AGhubqawsJBFixbNql5XkiSJ5ubm6OSJHo8HSZJwOp0YDAb8fj8w9++jCADCbSMQ
      CDA4OEhrayt6vZ4PPvgAm83GiRMnomV2795NQkLCpGUTExOpqKhAJpMBkbO5urq6ac+cZsrr
      9eJ0OgmHwxw9ehS/309VVRVutxuv18uhQ4ei01+sXbuW3NzcSetQKBTce++9qFQqINLodHd3
      09HRgVw+s3/B9PR0LBYLwWAQtVoNgNlsxu12c/jwYUKhEM8//zydnZ1TbvNK+fn5lJeXR393
      OBzU1NTc8Cju3t5eysrKsNvtABw6dIhAIMChQ4dwuVy88MILGI3GKbd9pa1bt5KWlgaAzWbD
      YrFQV1d3Q9OLJCYm4nK5MBgM5OfnA5Ez5JGREerq6qKfqcrKyugy0322srKy2Lx5c/R3n8/H
      xYsXGRkZmXW9rlZdXQ3AhQsXkCSJN998E5/Px+nTp4G5fx9FABBuG+Nn/MFgELvdTlpaGitW
      rCApafYja/fs2UNFRQUjIyMTzvJmy+fz4XK5omexJpMJhUKBVqtl6dKlZGVlzTiNM27Lli1U
      VFSgUCgYGBiY8XLx8fHU19dTXFwMRNISQ0ND+P1+AoEARUVFbNy4cVZ1AXjkkUeoqKigtrZ2
      1stCZHbYK6+I0tLSKCwsRKfTAbB69WpKS0tntc7c3Fw+9alPsWbNGs6ePTvrOpWVldHY2IhS
      GRlE5ff7GRwcxOv1YrfbKSgooLm5meTk5Fmve+/evVRUVNDS0jLrZceFw+Epg39+fj5FRUUz
      vjK80o28j2LiEmFejY6O0tPTg0wmw+l0EggECIVCU5YNBoNUVVXR29tLUlISCxcuxOfzsXjx
      YsxmM62trfT29rJo0SJMJhOhUAibzYZGo7nh+mVnZ1NUVARAcnIykiSRmJiIxWKhqqoKm80W
      PSOvq6ujt7cXlUrF2rVraWtrY82aNbhcruhrmZmZBINBHA4Ho6OjLF8+82H+paWlvPrqq6xb
      tw6AsbExFApFNACNN3bApG3Gx8eTnJxMWloavb29NDQ0IJPJ0Gq1XLx4kcTExBs6TpIkoVar
      2blzJ+Xl5TQ2NmKxWDh37hzhcHhSva7etl6vZ/369QDR9zYuLo5FixbR1dWF3++PHv/Z0Gq1
      9Pb2smfPHpqbm/H7/bhcrugZfnFxMT//+c/50pe+BFz7szU4OEhLSwujo6NkZmbS3d095Rn5
      TLW1tUWvmgwGA6dPn6ajo4Nt27ZNKjvX76MYCSzMq3A4jMfjif5jer1e4uLioqmca6mpqWHV
      qlUTGpgr+Xw+1Gr1jNY1E5IkEQgEUKvVE36eSk9PD4mJiWRmZk75ut/vR6lUzjgFNB2v1zuj
      f/iqqio2btw45bGQJAm/309cXNxN1WXcyZMn2bx587THZtzY2Bg2m42lS5dO+XooFEKSpGnf
      39m68piPjo7S2NjInj17piw7l5+t8fz++OfI4/Gg1c5s0rdYv48iAAiCEFMOhyOa/rldjY2N
      kZycfFNn8h8FIgAIgiDcpcRNYEEQhLuUCACCIAh3KREABEEQ7lIiAAiCINylRAAQBEG4S4kA
      IAiCcJcSAUAQBOEuJQKAIAjCXUoEAEEQhFvA0Gag/XwbtjHbnKy/8VTD5Z9PNkxf7orXRAAQ
      BEG4BaoOnEVC4tBvDmLsHMAybMFtd+OyuRg1jKBv6SMcDhMKhTC06Bnrv/zAGLvJTm9DDz63
      D5fNhXnIjL65LzInlS+AvqWP9qrLzwzoqu3E0GbAYXYgSRKGVj0mY+S5Ad21kYcW2UatYjZQ
      QRCEW0Eul7FiYzEZCzOoO1qHw2xHJpOx7ZHt6Fv0uO1uzEYTQz1DLCjIpulUA5/97hcAGGjv
      JxwOc+i3B8ldtpBRwwgepweVRs25t89QuGYpfo8vui3rsAXTwBjV71WxpLwQl83JqGGUXU9W
      RF4fsXL4dx+IKwBBEIRbyWV1odFGZuz82J88REJKIsaOAbxODy67G7fDzdr71pGUcflZBf1t
      BsxGE75LjfzKbaXkFecRDAQBWFWxGm3y5YfZpGanseaetcgVCoZ7h1i/dyPFm0sYNUSuKkb6
      hlm5vVQEAEEQhFshFArz9s/2U/3+edbcuw6ZTIYqToXf68dpcUQb8yXlhRx45i1G9ZefOGYy
      mggFI89X4KqZoOUKOYef/QCHyT7ldpdtWM7BX75H/fE6Fq1YDED2kmwuHq4Rs4EKgiDMN7/X
      jypOhUwmo/FkPR6nF31zH4/99RMABANBZDIZCuXkJ4WN3wdQa6Z//oLf60ehVExYPugPigAg
      CIJwO/F5fNhGbaRlp6FUz+1tWhEABEEQ7lLXvQcw1j/KQMfAhC/7NLkmYWZMxjHaqlpnXL6/
      zUDthzVzWKOpue0ujjx/+JZvVxCEW+O61xdn9p9mpG8Y66gVtUaNVqdl9T1r2bB3462o34w1
      VTYy2DXIfZ+/f76rcl2WIQudFzpYsal4RuVNRhPddV2suXfdHNdsIp/HT92xWu757H23dLuC
      INwa1w0An/yLhwF49V9fZsmqJWzYuwkAKSzRcKIe64iFZRtWkFOYA0DLmWZSs1PpbeghfWEG
      WXlZtJ5rJTElgZXby/C6vPS3GVAoFIwYRihaW0TGosiDs01GE82nm4hPjGftfetQKBX0NfeR
      kpmM2+HB7/GRszSX7tourKNWktKTKN5cgtPioLu2C8uwhaZTDWTlLSAsSUihMNmFOXicHgyt
      epZvWMHYwBh+j4/EVB39bQZWbiudcrsQubnSXNnEsg3LUWvUuB1u9E19FG8poa+pl+HeYRJS
      Eihat4y4+LjoPrisTvJW5uO2u+mp72L5xmJUcSq6ajvJyssiK39BdBt9zX1odfEYO4343F7K
      K1YTnxgPQG9jL6OGESyD5knvSygYov18Gw6zg/SF6SxZVYh50IzH4cYyZMHv9VG6vYx4nfbS
      unroa+oje0l2NPB43V5qP7xIKBBi9Z7VJKZGnuM61j9Kb2MvSCI7KAgfZTfcDfTwsx/QcLwO
      pVrFyz98kbGBMQDefuYt3v/lu5gGzfzh31/htaf/gNlo4t1fvIOhRY950MxrT79Kw8l6RvqG
      +e13fo3D7MA2auO5f/wdAN11Xbz7iwMAnN1/mlN/OMkL33sWQ6uezpoOmiob8bl9nHjlOKff
      PIXb7sY6asVtd2Fo68duttN6tiU6NNo2YuXDZw8B0FHdTuXrp/jtd35Fw4n6abcLIJPJqHrn
      LJ01HQA0VzbRcKKOzoudvPXT/fjcXjqq2+m6NLIOIiP23vn52wC0V7dx4Jm3MbTqCQVDvPmj
      15EkGOwyUvn6qej+vfj9F+hvM1B3pJYTLx+L/P3tM+z/yRvYRm0M9Q5NOv7HXz5G1bvn8Lq8
      nH3rDE6Lk47qdv7wb68w2D1I69kWXvrnF5EkidZzLbz7iwNotHEc//1R6o7WEg6HefF7z2E2
      mnA7XDz33WcJBUP0txn47Xd+zYh+mP72/hv9eAiCcAe4oVvMkiRRe+Qif/r019Cl6XBZnbSe
      aWbH47sAePxvniQxVYe+qZe9X/04uUW5mIwm3HY3uvQkUhek8vA39gHwwveeo+tiBx6nh2Xr
      l7F93w68Lg8/+dqPeejPPwmAvqWPr/7rn5GSlQLAwuWLMF06kzd2Gtnx2C5Wbi2lv93A3q98
      DID+tukbr96GHh77mycoXL2UM/srp9yuXBGJjcWbS+iobmfltlI6qtsp21WOy+JAk6ghb2U+
      2/btmNC1avGKxTitTmxjNgwtesp2laNv7kOtUZOUkUxSehKDXcYJ9bn/8/ezcnsZFw/X0FMf
      CSbV71Xx8Df2UVBWQN3RWroudkxYxmlxkJSWxIrNxex8YhcyWaRzcPGWEh788l4CvgA//tP/
      wDJkpu7IRXY+UUHp9jKSs1K4cLCajEUZ+D1+9n7145Fj3NTHQHs/tUcusumhLex6sgLLsIWe
      hu4b+IQIgnAnuKEAEPAFCPqDvPb0K9GGZ8Xmkknlxl8DkMllkwYwACSmJBLwBXE7PHRd7OR3
      f/9rALLysvC5I6Pedj5REW38z79XxYWD5yOpH6sTKTz7NEXpjjIKVy8FmHa78bpIGqZ4Swln
      3jqDy+ZioKOffd96DKVaidPq5Mjzh7GN2njkrx6loHwJAEq1ksXFeeibejF2Gnnifz7FgWfe
      QhWnonB14bUrdun4hMNhHBYHmYszpy2659P3cvqNU7z276+iVCv54+98ZsLrqjgVcfFx0WNb
      +fpJqt+rAiA5KwWPw4PT6ozut1whJxQM4TDZWbZ++ewOqCAId6QbCgBqjZqk9CS27dtB8eYS
      /F4/9rGZ9wySpMhVhMPsoLexh7X3r0MdryY5M5lP/8PnUMWpGOoeRJOgASJzaIzrqG5n15O7
      Kdm6kjNvVmJoNUR2RK2MTnwkk8mQycDn9iFJEpZhy4Tty65YX8bCjGm3C5Eh1SlZyRx76Qj5
      pfloEjSM9A2z/sGNbH90J8dfPkbLmeZoAABYsqqQumN16NJ0pGWn4XV56azpYNeTu2d0fORy
      OcnpyfTUd1G2cxUum2tSGduolfu/+CAPyGU8/91n0Tf3XTq2kYDYXdeF3+snNSeVjIUZaBI0
      3PeFB0CC4d4h4rRxyBVy9n3rcVKyUqLzkiRnptBd303xlhLcU2xXEISPjhseZfDgVz7Ggf96
      iyMvfEjA4+eez91HxqKMiYVkIJvirN86YuGnX/sxXreX1XvWkFeST27RQtrPt/HTr/8YVZwK
      bZKWL/7gK5OWLVq3jPf//3c59tJRElIS0GgjjfWSVYUcf/ko/9+f/SebP7mVRSsW88r/eZmW
      M82k56ZPux+lO8qm3K7sisuV4s0lHH/5GJ/4+qcAGNGP8OL3nycxRYfL5oyms8YtWVXIkecP
      RydeWrRiEU2nmlhckhc5LLKpr4au/NOup3bz7i8OcPTFI6g16klXA82nm/jDv79KQrKWUCBE
      fmkBDSfqaTzZQNfFTvwePw9+5WOo49TseGwnr/7bK/z06z8mHAxTvHUlD355L5se2sIvv/3f
      aJO0SOEwT3z7j9j8iS28+P3n+cnXOqI3owVB+Gi6qYFgUljCbXcRr9NGc+bXM9AxwIFn9vOl
      H34VYNLwZZ/HhxSWJpyFX81hcaBUKSc1UKHg/2XvvAOjKNM//tmaXja9FwIpkEYLIEiV7qFi
      QUVB8c6Gov7uLOidivXOsxc4BDxUULoICAKhBQwQSkJIL6SHtE02m2yyfX9/BBYj3MlGk5Bj
      Pv8AM8/MfGeYnWfmfd/n+5rQNGtwdndCLJHQ3tKGxQKOro6/quu/HddoMKJtbcfBxdHa3m80
      GGlVteLs5oRULvvV/XcFXbsOo96I089Mnn65XtuqxcXTBbFYzNHvU1HVsdA1SQAAIABJREFU
      NTH+nonI7eWd+iYsFgvtLe3I7WWd9JoMRrRtOhxdHa1NdiajiVZVK66erp2a8QQEBP63+E11
      xiKxCCd35y5t+598Ky4Op/xvuFwYrvhLJFIJrp6u1n9fHAJ5Nfy340plUusQyZ8vc/d2v+r9
      dwU7B7v/qus/rb/Sm7tIJLpiIpTIpDi5db4NJFIJbj9zIhQQEPjfRLCCEBAQELhOEeygBQQE
      BK5T/ucTgF6rtyneYrHYvM21iK3nYDQYMRlN3aRGQEDgWuSqE0De8as3L+tuDDo92T9lUV1U
      1Wl5dVGVdVKFi6RsOAhATUkN2UeyrDPqmM1mitOLyP4pC61Ga40vzymjLLsUXZuOnKPZFJ4q
      wGzqmIhBrVRfqB5WWeMvzrd5EV27jpLMc5RknqM899JyW7FYLJ0M48xmM6VZJZxNyaTxvLLT
      8sr8ik7b6tv1HNuWitlkJu94LqVZJdZ1yqoGq76mmksWE8d3HEPXrqOhsp6zKZnU/Wwyil9e
      u4vnWVtW+6v7FRAQuHa56gRQkVv2qzH1FXXkHs35TYKuhj3/3o2jiyO5R3Moyy7FoDOwY+n3
      7Pnix05vvqo6FW7e7lQXVXPmQDrOCmd2r9wFQMqGQ+h1epzdndm9apd1m+KMYvolRPDjqp04
      ujih1+o5svkwBp2evat3o/DzYN/XybS3ttPS1MK2T75j39eXHDMrcsupLqrCZDJhNnX9jdpi
      sVDxswRSmV9Ba1Mrnv6epGw4hKpORX1FPd9//B2pW3/qtG1+Wh5RSdEcWncAgJpz5zmbkglA
      2s7jmEwmTCaTtWbg4gih2tJaclI7hs2e2HmchqqGK167vGO57PniR87sT7ce80r7FRAQuLa5
      6lFAeq2efV8no23TMvimIQREBHDmQAYNVQ3I5FJuvHMcaTuP09rUSk3JeQaNjkWj1hAe14+D
      6w4QPy4ehZ8Hp/ecIm5cPEc2pWAymghP6Ef/wQMoPFVAWVYpIrGYsXPGUZ5dRkV+Bbo2HU6u
      jlabCa1Gi52jHeHx/QiKCmb/2mSCooKZ/OA0ju841klzbmo28eMTOLrtKGPvGo+DswNlWaWo
      lWrGzRmPSCTCZDSRceFBZtAZEEvESKQSZj1xKyKRiJbGFqqLqig5W0Lc2HiCIoMwTh5KcXoR
      kcOjmPnYLPZ9vdd6TGW1kphRg/Dw9+ikxWKxsO+rvYjEIuQOdoy5/UayUjJpqu3wMPIJ8WHI
      lGHUltaQvi8dqazzf01ITKh1Py4eLtY/b1l0G3tX7+kUW1taQ9y4eE7sSiN6RAwWi4Wdy3cQ
      NzYekUhE/8EDOsVX5lcQFBVEWGwY4RcK2iryKtBptOQey73s2oXGhhE1Ipq9q3db93Gl/QoI
      CFzbXPUXgFQuZcLciUx7aDqnd5+kTa1BWa1k0n034RHgSVl2KUOnDCNm5EAm3DsJhb8HBWn5
      GPVGWptaKDxVSH1FPRaLhTP70xl0Yxw3zZ9C/vE8LGYLhScLuGn+FKKSosj5KZvmehX9B/dn
      6oJpaNSXKlI1za24enYMUZTZybCYLUikksuGQ1osFjTNGpzcnTHqDdahka7ebmhUrYhEIprr
      VWz7dKvV4bTgRD6Rw6KAjgdaWU4ZyV/u4YZbx6BRtVonaXa7sA+5vfyyB7WTuxMnf0zjh2Xb
      Ob33VKd14+6ZwNg54zEZTagb1DRUNjD4piFM++MM6is7zPSO7zjG5HmTmXjfpMv+D07sSmPV
      8ytwdHVC4avA3skesbjzf6FaqcbF0xWjwWi9Jj+fSk4skbD7ix/Z9ulW6is7JoguOl1I/yED
      EIlEmE1mDm9KwaA3EDAg8IrX7krDTK+0XwEBgWubq/4CEIvFHQ8bMcjsZaiVLSirGjoeFlo9
      jvGdi5Vkchkmk4ny3DLixsZTeKqAkjPFRI2I5sTONNpbcyk4kQ9Ae2sbjeeVHN6UgtlkwjPA
      C5PBaPXj+XmRmb2jPe2t7UBH+/d/orqoioABgdbtjQYjUpmU9pb2DjuH8jpSvzvC1AXTrePj
      zxdXM3D0IACyUjKpr6xn1pO3diSYnx23raUdu/9QqBY7Jo7YMXEAbP/se+LHJSCVS9G2tpP8
      1V68grxorFZa+yp+fo5msxkHZwckMukVz2349CSGTB7K4Y2HKM8pI2Rg6GUxOanZDBodi0Qq
      waC/1B9ivuCZNOXBqUCHTca+r/cy5cFpgAipTIrZZGbHsm3Ej08gLDb8P167K/HL/c545OYr
      xgkICFw7XPUXgMViwWwyU1tWi1giQeGrwM7JnlG33MDQacNx93ZHbi9H3dBs7TT1C/Pj9J5T
      BEUFY+dgR0NVA+4+CnzD/PAK8mbM7BuJvTEOBxdHnNydSZoxguHTR+AT4vMfdTi6OdFYrUSr
      0ZJ1+CxBUcFYzBaMeiNmkxmTwYTJaKLwZIHV1CwsNpwz+9PRt+s4X1yNu6+CY9tSmXT/TYgl
      YrQaLa1NLTi5O1ubhQpOFjDqltEYdAb0Wj2hg8LISsnEZDSReTCD8LhwzGaz9bgX/8z+KYtW
      VStajRZ9uw6JrOPNu668jtBBYQybloSd45WLu8RiMa0qDfp23WVzAFTkldPS1IJYIsbBxRGD
      3nDpuOZLf7Y0tuDi4YJIJMJiNtPc0ExZThluXm60qdvIPZaD0WCkrrxjLoPCUwUMGNrRdJOf
      lkfIwFD8wv3RarSYjKYrXjuT0XThfDuuu0atuWy/AgIC1z6Sl1566dWrCTSbzJw9nElLYwuj
      brkBOwc7XDxcOLXnFM11TQRFB+Pq6Up9RR35x/MIiw3H1dMNsVSMfz9/nN2dcXB1xDPAC+8Q
      H6oLq8lJzcLe2QHvYB98Qnw5+eMJ6spqCYwMws7RDmcPF2R2MkCEh19Hm7pIJMKvnz/Htx9F
      ZicnYWIiTbVNnE4+hVgspqakBp1Gh1rZbG2T9gjwpK6slpyjuYycNQonVydaGluozK+kuqiK
      mpLzNFYriRk5EHsne4w6I011TVQXVVFdVEWbWkNQZBB2jvac3JXGgKGR+EcEUHPuPJmHziB3
      sOuY5EYqxt1XwZkDGZRllTLiDyOtNg6unq4UZxRRcraEoKhgvIO9kcllKHwViMQdzkMKPw+8
      Aj1J++E47a3tBPYPRHHhvI0GI5kHMig8WYCHvydRSdGUZZWSk5qN3F5OZX4F6oZmXBQu+Ib6
      AhAUGcyJnWm0qTWMnDUKub0cZbWSzINn0LXpGHHzSDIPZZI4cTAikQitpp26sjrreTu5ORMc
      HXzZtcs8cIZzZ4qtxw2ODkFVp+q0X4lEctk9JCAgcG3xP1kJnJ+Wh72TPaGDwq56m72rdzP5
      gandJ6oHOLTuAKNuHf0fbTZ+iaZZQ8b+dEbfNqablQkICFyL/E8mgJqSGnxDfTvZPv83TEYT
      yqoGfC68OfdVas6dx+/C1JxXQ4tSjVgi7rKfk4CAQN/mfzIBCAgICAj8Ov/zVhACAgICAldG
      SAACAgIC1ylCAhAQEBC4ThESgICAgMB1ipAABAQEBK5ThAQgICAgcJ0iJAABAQGBHsRisaDT
      6X498CowGAyYLtjO5+bmsmHDBpqbm/9jvNlsRq/vsMzXarVCAhAQEBDoKnv37uXs2bNkZWXx
      7rvvAvDpp5+SkZFBenr6FbfR6/V89NFHAGg0GpYsWcJrr73G4cOHbT7+Dz/8QHZ2NgCnTp1i
      4sSJ5Ofnc+LECU6cOMGuXbs6xVdUVLBu3ToA7Ozsrt4NVEBAQECgM4GBgZw61WH73tbWRmtr
      K21tbUilHY6+a9eupb6+Hp1Ox/PPP88XX3yBUnlpRr/S0lJcXV154oknAFi7di0NDQ1IJBIW
      LlzI8uXLaW5uZt68eZw6dYq8vDzGjBlDREQEK1asoK6ujn79+ln3J5VKaWtro729nQMHDvDG
      G2+wfPlyWltb8fX15cYbbyQtLY2ioiJmz54tfAEICAgIdJUBAwZQXFyMSqUiNjaWvXv3MmjQ
      IBobG2lsbOTcuXM8+eSTtLe3U1FRgVarZdGiRdbtBw4cSHh4OM8++yzp6emcO3eORYsWYTab
      +emnn6iurqZfv37s2rWLHTt2MGLECLZs2cJ3333HPffcw/jx46+oa8OGDURGRiKXy6mrq+PP
      f/4z+fn5mM1mhg4dyrx58zh79qyQAAQEBAS6ikwmw2w2IxKJGDRoEJs2bSIuLq5TjEQisc6n
      0traSmPjJav3qqoqBg0axIIFCzh2rGNGQ41GQ11dHV5eXuh0OgYOHEhSUhJisRh3d3duu+02
      JBIJarX6P7b3z5s3j6qqKkpLSzGZTKjV6o42f7EYiURideu9ajtoAQEBAYHLcXBwYMCAAURG
      RtLW1sbYsWMRiUS4u7ujUCgIDe2YuCkuLg6lUkleXh7x8fGEhIRgMplITk6mqqqKOXPmcPz4
      cUpKShg7diyJiYmIRCIyMjKIjIxkyJAhHD58GC8vL8aPH8+uXbtwcXEhNjYWZ2dnMjMziYyM
      xN7eHoVCwbhx4ygsLCQnJ4eqqipmzZqFj48P9vb2+Pr6Ym9vL5jBCQgICFwrrF+/njlz5nRp
      2y1bttDc3Mzs2bNxc3P71X22t7cLCUBAQEDgekXoAxAQEBC4ThESgICAgMB1ipAABAQEBK5T
      hEKwC+Tn57N69WqcnZ1ZvHgxYrEYk8nEW2+9RVtbGw899BD9+/fvbZmd+PTTT2lqasLDw4OF
      Cxdal2dnZ/Pee++xatUqRKKrmxazp/jmm28oLi5myJAhzJw5E+jovMrKysLf358//elPvayw
      A5PJxMaNG6mpqeHpp5++4v1x+PBhUlJSaG1t5ZlnnsHHx6dXNZ87d47ly5fz2GOP4eXlxXvv
      vYfRaGTMmDFMndox3/Xnn39OfX09VVVVLFmyBG9v717V/NNPP7Fx40Y+/PBDjh8/TnJyMi0t
      LSQlJTF79mwAPvroI5qamggNDeXBBx/sVb1NTU18/PHH6HQ6ZsyYgbe392X3BXT8NlUqFRMm
      TGD06NG9qvns2bNs2rQJrVbLU089RUBAAKtWrcJoNApfABfZsmULixcvJjw83FpafebMGaKj
      o3nuuefYsmVLLyu8nMcff5zHH3+cqqoq6zKz2cyWLVsICAjoRWVXpqWlhYKCAu68804mT55s
      XZ6RkcHLL7+MUqlErVb3osJLGI1GBgwYgEqlAq58f4wZM4bnnnuOkJAQ6uvre1Mu0FGJGh4e
      jsFgwMnJib/97W/cf//9Vr0ADz/8MM888wxubm69/vCHjnH0Li4uAIwYMYKXXnoJLy8vhg8f
      bo2ZO3cuzz//PHl5eb0l04pcLufZZ5/loYce4vTp01e8L4qLizGZTNx5552MHDmylxVDQEAA
      r7zyCklJSRQVFVFQUACAUqkUEsBF2tracHV1xdPT01pc0dzcjKenJ+7u7rS2tvaywsvJy8vj
      /fffJyQkxLrsYrWgxWKhra2tF9VdTmNjIw0NDWRmZvL2229bl4eFhfH6669TUFCARqPpRYWX
      sLOzY+jQodZ/X+n+EIlEvPfeexQWFuLv799bUq3ExsZaH6YikYg9e/awdOnSTucBsHXrVm65
      5ZbekHgZSUlJ1qIkgLq6OrRaLcHBwdZlLS0tvPLKKyxYsKA3JHbCycmJEydOsHr1aubNm3fF
      +6KhoYHa2lrS0tJYunRpLysGDw8PvvjiC2pqahg9ejRff/01U6ZMQafTCQngIv7+/mRmZpKR
      kUFoaCjZ2dmEhYWRnp5Oenp6pxvyWsBisWA2m3nppZcoKCigra2NoqIi7O3tqa6upqqqijNn
      zvS2zE74+vri4uLClClT0Ov11NXVUV9fz8yZM1m0aBHe3t7XxFspdDQBqVQqDAYDra2tne6P
      kJAQcnJyKCws5IknnmD8+PEcP368tyWj0WjQarW0tLRQW1tLbGwsr7zyCj/++CPNzc1UVFSg
      0+nIyMhgxIgRvS0X6HjJMhgM1i+tn49Zr6ioQK1W889//pOHH34YDw+P3pQKQHV1Nd9//z0L
      Fy5EJBJd8bkRGhqKk5MTU6dO/a/OnD3Fnj17MBqN3HHHHahUKiIiItizZw8VFRVCJfBFYmJi
      2LlzJzExMQQGBrJ9+3amTZuGWq0mNzeXuXPnIpfLe1tmJw4ePMihQ4eYNGkSxcXFtLW1MWnS
      JBITE3F3d2fMmDHXVB+AVCrFy8uLbdu2cccdd/D9998THR1NQUEBu3fv5q677rpmEoBSqWTb
      tm14eHjQ2NjIrFmzrPeHVColKysLNzc3tm7dikgk4uabb0Yq7d0utUOHDlkf/p6enhw8eJBT
      p04xZ84c9u3bh6enJyaTiaioKHx9fXtV60U2bNiAQqEgLy+PxMREmpqarMnps88+Y9iwYajV
      asrLy6moqCA2NrZX9apUKjQaDUVFRWi1WqZPn269LwYOHMjKlSuZOXMmIpGIffv2MXfuXOtX
      WW/R1NREY2MjhYWFeHh4cNNNN5GQkICXl5dQCHYlampqcHNzw8HBobelXDWlpaWEhYX1tgyb
      6IuaAcrLywkKCrJ2+PUF+tq1tlgslJWV9SnNKpUKi8WCQqHobSlXjZAABAQEBK5TfvWb9VoY
      3fDfsLOz620JAgICAn2SPv8FYDQae1uCgICAQJ+k7zRiCggICAj8rggJQEBAQOA6pUvj1pqb
      mzl27BiBgYGdhmWZzWYOHTrEyJEj+9QIGgGB/0ZZWRmHDx8mPDycQYMGcfDgQaBjOsBBgwb1
      rrgrkJubi0ajYejQoezevRudTsfMmTORSqXWdcOGDettmQLXAF36Ati7dy+urq589dVXnQod
      du7cydq1a61FHQIC/wsUFRURGhrKsmXLKC0tRS6Xk5ycfM0V2gHodDr+8Y9/sHLlSnbt2sWJ
      Eyeoqqriyy+/7LROQABsTABGo9FaUebq6gp0lEZDR7l2Tk5OJw8PAYH/BYYPH86ePXuQyWQM
      HDiQadOmUV1dzZ133tnb0i7js88+49FHHwU6piBMT0/n4MGDDBs2rNM6AQGwcU7gjRs3UlJS
      Qn19PcnJybzwwgvWYZhr1qyhqqqKoqIiLBYL8fHx3aW5E2azuUeOI3D9IpVKCQ8P5+TJk0RE
      RJCWloafnx9JSUm9La0TarWap59+Go1Gw7FjxzCZTIwcOZJx48axd+9e1q9fb103depU3N3d
      e1uyQC9jUx/ARY+OJ598Ej8/Pz766CMWLFjA2rVreeaZZwBYvnw5kyZN+v2VCgj0Em+//Tbt
      7e1UV1fj4uJCdnY2Tz31VG/LugxXV1cyMjLQ6XQ89dRTjB07lk8//RR7e3tuu+02XnnlFeu6
      ixOVC1zf/OY6gKysLIxGI4mJib+XJpsQ6gAEuhuLxUJTUxOurq697vdjK1qtFpPJZG2qFRD4
      OUIhmICAgMB1ilAHICAgIHCdIiQAAQEBgeuUvtWgKdArmE1mzKa+NdrKoDVg1Bp6W8bVIxIh
      kfat9zGxVIydk31vy7AJi6XvtXiLxKJum9dDSAACv4rZZMakN/W2DJvQqrW0q66tKTH/GyKx
      CJmDrLdl2ITUTorcsW+58Vr62IsMgEgkgW6a16lvvXIICAgICPxuCAlAQEBA4DpFSAACAgIC
      1yk29QHk5+ezevVqnJ2dWbx4MWKxGJPJxFtvvUVbWxsPPfQQ/fv37y6tAj9jzZo1JCcns3r1
      aj777DMyMzOpqqpiyZIlHD58mOzsbMaNG8d9993Xqzorqyp5+dWXsbOz452/v4OLswsffvIh
      hYWFIII3X3uT5xc/j9liZu49c+kf0f+y+J4iOSWZnXt3ojPoefGpxXyw/AMMBiMTb5zALdNu
      ISs3izWb1tDQqOTu2+agalZx+NgRYqMH8af7/0Tl+UqeevFpPvvHp/j5+HW73vb2dpauWoa9
      nR0L/7SQl15/CZ1OR0lZKev+/S16vZ5X3noFAGWjkqXvLe0Uv37LBlJSU4gbGMujC3rWI6iw
      qJC33nqL9vZ2/vLnvzBs2DDKy8t5YfELyOVyPvnkE44cOcK//vUvvt/6PdDhyjr/gfl8s/Yb
      AgICelQvwF//9lfqGxrw9vbmjddety5/8qlFxMfFMfbGsby85BV8vH1Y9MSTfPnVl1eMv5aw
      6Qtgy5YtLF68mPDwcLKzswE4c+YM0dHRPPfcc2zZsqVbRApcjo+Pj/XvCxcuZOnSpcjlckJD
      Qzlz5gyPP/44d9xxRy8q7GDFqhXMu28ezz/7vPVhvmjhIt58/U1aWlooKSkhKDCIhY8u5MhP
      R64Y31PExcTx/uvvExIYjEqt4p2X3+GReQ9zJjsTgNiYWP7+t78zODaR4YnDOXDkAB+9+SGZ
      uWcxmUx8/tUKYmNie6w4sVXTypCEwTQ2NQLw5t/e5OnHniYiPAKZVIaToxPvvvEud99+D3GD
      4i+L35+yj8/e/ZQzWZmYTD3bya9wV7D8X8uZP28+aWlpAKxdu5bFLyzmllm38OOuH7GT2+Hm
      5mbd5v0P3mdw4mAMht4Z3fXaktd47dUllJaWWpft3LULX19flEolefl5jB87jrfeeJMBAwZc
      Mf5aw6YE0NbWhqurK56enlYb6ObmZjw9PXF3d6e1tbVbRApczpQpUzoNDdu2bRszZsxAqVRS
      U1NDamoqCxcu7EWFHZw/f56zWWd55bVXyDiTAUBZeRnPPv8sbq5uBAYGkpOXw6dLPyUxIfGK
      8T2Fwl3Bkn8uwVPhxcDIgWzbvY13PvsnI4eOtMa0a9tBBG6ubkilHaN23Fzc2HtoL4F+Achl
      cjRtmh7R6+3lTWxMbKdlK79ayZ/m/7HTstXfrOaBe+dfFn9Rv7ubG21tPTtiysvLi6+++ort
      O7bzwAMPAB1fKX5+fvj5+aFUKpk4caLVemP//v2EhoQit5P32nPmdHo6f3nuLwy40Mqh1WpZ
      t/5bbpp0E5q2NkJDw2hrb2f+gw9wOv30ZfHXIjYlAH9/fzIzM8nIyCA0NJTs7GzCwsJIT08n
      PT2d4ODg7tIp8DPMZjMNDQ3odDqampqwWCysXbuW++67j+DgYNzc3JgzZw5arba3pRITHUNM
      TAyjR42mrr4OgMbGRj5870PMZjPbf9jO6FGjefXlV/lh5w9XjO8pVq5ZRf/w/sycPIOqmioG
      xw7m/SXvsXXXVmvMxm0biRkQA4DBYOB87Xlq6s5jZ2ePyWwitzCXkxkne0SvXq9H1axCq9Oh
      0Wiob6hH1axiQMQAa0xOXg7+vn54KDwuizcY9FTXVFNdcx5nZ+ce0XyR1NRU0tLSeHHxi9Y3
      +qioKA4dOkRKSgpRUVE0Njai1+lRKpUYDAaMRiNnz54lNTW1R7VCR/2A2Wxi2WfLOJOZidFo
      RKlUEhsbx9at33HmTAZqdTN33XEnEydMoLS09LL4axGb7KBjYmLYuXMnMTExBAYGsn37dqZN
      m4ZarSY3N5e5c+cil8u7Ue7lXI920O3t7SxduhRfX18KCwvp168fAQEBREVFIZPJ8PPz49//
      /jePPvoofn6/vS3abDJjMXWtgCYxIZHtO7YDMOfOOYjFYg6lHGLj5o2MGD6Ce+++l/SMdA4f
      PsxTTz7F2BvHXhbfFbpSCKZsUlJdc57cgly8PLzYc3AvR08eY8E9D+Lp4QlAaUUpUydORSQS
      ERkRybfffcu9t9/LqGEjGT54OP6+/owZMcZqk361iEQiJDKJTducKz3Hzr27cHJyQqvTYrFY
      uGHkaDwVHtaY/KJ8Jk+YjLOT82XxMybPYO2Gtdx/9/34+/nbdGy4UAjm3LVCsPr6ehqbGsk8
      m4lUKiUsLIzYQbH8uPtHFO4Kbr/9dpYtW4aXtxenT59m/rz5jBkzhqCgICZOmoi9fRcL0H5D
      Idj327axfcd2bp89m6jIKFxdXRl9w2gGDxlCVGQkPj6+rPlmLU5Oztx7z71s27G9U3xXEYnF
      3VYI1mUzuJqaGtzc3Hp96sdrNbP+L2HUG/tcIVibqk0oBOtmpHZSXH3dfj3wGqIvFoKJpRJE
      4musEvj3eLMUEBAQEOg9hDoAAQEBgesUIQEICAgIXKf0eTM4k77v9QEoy5S9LcEmLGYLFnPf
      clE0m819yvnRpDPR1of6LAAkMgmGtj7kuAo4KhyRyvvWY08qEiHupnd14QtAQEBA4DpFSAAC
      AgIC1ylCAhAQEBC4TrGpMay9vZ3U1FRcXFxISkrqtC41NZWYmBgUCsXvKrC7aG5u5i/PPYvB
      oGf6tOnMuWsODQ0NvPDiYrTadubeO5fKqipOnDhBSEgIf33xJb759huS9+3ji5Wrelzv5m2b
      STmawkdvf8Tu/bvZuXcXLs4uvP7ia4hEInLyc/h0xWe4urjy91fe5vMvPye/qIBRw0fS0tJC
      Tn4u52vP89yiZ4kfFN/tevceSuaHvT+g1+l4++W3ST60j8NHD/Phmx8AoG5p4dV3XsFssXDn
      rDsQIeKbLd/i6uLKswv/wqbtmzr0DxvJ7X+4vdv1AiSn7GNn8k70eh1vvfQWjg6OPPniImbP
      nM3kcTfR2NTIWx+9jVan5fknniM4MJhPVn6CwWhkwujxrNu6ntbWFp7845NED4judr0ZOWfY
      9MMmWjWtPHb/o7Rr2/nsy8/44NUPcHa8VNm75IPXiIqIYubEGbz24euYzCaef+w5fL19Wfb1
      MoxGI08++GS364WOZ8iyfy/DTm7Pwj8+zofLPqSsoozB8YOZd/c8AD5d8Rm5BblMGjeRxLhE
      Plz2IVqtlscfepyjJ45RUlaCh8KDF55+vkc0X+RgykG+/PorwsLCeOWllwHYsGkDe/clkxAX
      z/Bhw/l81QqkUikfv/8RG7dsYv+B/STGJ7DoiUU9qvUix44d4/U3Xufbbzt+WwCPPvooBqOB
      uLg4274ADh48iEwmY8+ePRQVFVmXnzx5ki+++OKaNj36JS4uLixf9i+eefr/OHmqo3Tfzs6O
      D9//gMUvvEhKSgqpqT/x+b+WU1NTQ5OqCW9v717T6+npaS1i/GHEWkLEAAAgAElEQVTPD3z4
      1gf4eHmTV5gHwL+/Wc2f5v2RZx57mmZ1M9l5OTxwzwP8YeofeHDug/z91beRy+UMjBrYI3rj
      Y+L48I0PCAkKoaq6Ci8PT+BSp2x1TTUBfgE8NHcBx04eJ6cgl5snz+TlP/8NsVhMTn4OD9w9
      n5un3NwjegHiYmJ5/7X3CA4MofJ8Feu+W0dU/yhaW1sAkMvlLHnuVSaMHk9+UT45BTmAiPqG
      ehIGJfDWi28yavgoSspLekRvfHQcS/7vVUYMHkFZVRkGowF/H/9O1fEHjx7Ey8MTlVrF/tT9
      zJg0gwVzHmTHvh3kFeV16G9s6BG90GFgNzh+MI2qRiwWC8Wl5/jgrQ84euIoFosFvV5PflE+
      n77zCbv378HN1Z13X3+XObfN4XRmOrkFOTy76C+UVpT2mOaLrP7qS55+8imefOwJoMMeYuv2
      73nisYXMnzef9RvX8/477zFh3Hj2H9zPnr27+eLzVZw+k97jZnsX0ev1BAcHd5rSdenSpfz1
      pb+SnZ1tWwKYPn06oaGhqFQq68PQaDSya9cuZs6c+fsq72bEYjHrN27g5VdfZuyNY4GOpHDg
      4AHe+ec7/PnPfyYqKpqHH32EzMxM1Go1k2+a3G0l2b/G+NHjrccePWI0Tz6/iNQTR2lWqwGo
      q68j42wGz736PNl52dQ11HEi/QQvvLYYgN379jBp3CSruVZ3o3BX8Mo/XsXTw4uYyBjG3TAO
      kejS7ebj5U1+UQEr16wiLiaWuJhYzpWV8Mdn/sjZ3LPUNdRzIuMkL77xYo/ovah5ybuv4eXh
      ia+XD5k5mURGRKJp7zB3c3Zy5qe0VHILchk/ZjzLv/ycWVP/gE6vw2w289GKj9lzcC8xkTE9
      olcsFvPZl0vZd2QfURFRDE8Yjp3dJYsEnV7H9uQdjB42mnZte8dLjIcX3h7eNDU3sWrdKmZO
      nIFOr+uxivqfG9KJRCLc3dx57pXnKDxXhNlspqW1BQ+FApFIhEwqw1PhwYbvNrD7wB7uuf1u
      fL39+Hj5J7j2sFMsQFVVJWknT/DgwwvQ6rTodDoqKytJO5nGQ4/8kelTp/P4Uwv5fvv3qFTN
      yGQdld0KN3c0mp4xCPwlY8eOvcytYW/yXp599lmGDR1mWwLIzs5mxYoV/PWvf7XatO7evZuG
      hgYOHDjAvn37fj/l3UxtbS1Jw4ez6vOVfLt+HQClpaX8e/VqXl/yGmKRmPvuncvf33qbgIAA
      /P38USqVVgO2nsRsNtPY1Ije0GHmNX70eN5++S28Pb2JvGD8FRocyqjho4jqH4WzkzOuLq7c
      OuMWdHodFouFLds3c0cPNaUArFizkgH9+nPz5JlodVoaVY0dZmRqFQBnss+QNCSJ5598jj0H
      9yKRSLj9D7OJHhCDVCLF1cWFW6bNQqfX9ZjmVWtX0T88ghk3zeB87XnCQsJJSU2xmrtVVFWw
      4fsNPHjPgzQ1NRHVP4ptu7dTWl7K8dNpPDBnPo/Me5gf9u7sEb3nys9x/+z7eOjuBfx4cDfq
      VjV6vY5mdTMms4mmZhVREVHsSdlLbmEO/r7+pGWc4HhGGn7efgzoF8kP+3dSVlmGsqlnhiZf
      NKTT6bRoNBoeffAR/u/x/yMyIhKJRILCXUF5RTnV56sxmoycOH2C05npPP3oUxgMBgqK81n8
      9As0NjWi1fWs2WFYWDjTp0zDx9sHvU6Pvb09wUFB3DrrVqRSKQnxCSz7eCnBwSEkJiSg0+up
      qq6iqroaF5eeT1gAKpUKnVZHY2MjJpOJlpYWAgMCWbVqFbt377bNDG7FihUYjUYyMzPx9fXl
      q6++Yt68eUyfPh29Xs/gwYPx97fdVOq3YDJ07c1Fq9Xy1ddfk5KSwsLHF+Lj7Y1SqUStbiYr
      K4v29nZq62pZt34djz36KAp3Bf9a/i98fXwoKi5i2LBhXdbc3txuW7y2ndXffom3pzclZSXI
      ZDLWbFzLrTNuITIiEoDEuETWbVlPWEgYk8ZNwtfLh3Vb1jHv7nlIpVJ8ff3oHx7RNcEWft56
      c1UoG5VU11STU5CLp8KLrbu+x8vTi9KyEhJjEwkJDCEz5yxHTxzjkfkPo9Xp2PLDFvqH92fK
      +Mn4ePmwfut65s2Zh7eX7U1vFoulC5obOV9bTW5hLvED47lp3E1E9o8kflAC3p5eNDU30dLa
      Ql5RHl6e3sycPINhCUPx8fLG19uXb7Z8S72ynvvvvM9mszKL2YLJaFszQZ2yng3bN9DQpOSe
      W+5m98HdyKQyCksKiY6IxlPhwdC4oQyKGkR4SDhjho8htziPZnUzc2fPJSlhOENiB+Pt4UVs
      dOyvH/AXiCVi5A62mT+eKz3HruRdODl2GNIVFBWQnLKPhQ89jpurGyKRiKDAIDZt38wj8x/G
      bDGjalaRk5+DRCIlaWgSazasYfrk6dZ73xZkDjLEkq6NfRmckMiKL1YwcfwE4uM6+tGio6JZ
      +cVK7r7rbiwWC0v/tYwbbxjD6BtGMzBmIP/+ajUPPbCAwIDALh0TfpsX0Jo1a5DJZGRnZ5OQ
      kIBUKuXbdd+ye/duFixY0HUzuKysLIxGI4mJiV0S9nuha+t9y2NbEQrBuh+z2dynNJuNZvTt
      +t6WYRMSmQQnhVNvy7CJPlkIZt/1pPWr++7qhrGxtr8xCAgICAhcOwh1AAICAgLXKUICEBAQ
      ELhO6VuNYVfA1g7Va4HyM2W9LcEmygvKKC8s720ZNuET6ItvoG9vy7hqTEYj7a19614WicXI
      7Xt2BsDfin//ABxcencSK1vxDPHEzsm2GeauFuELQEBAQOA6RUgAAgICAtcpQgIQEBAQuE6x
      qRAMoKioiM2bNzN06FAADAYDq1at4siRI8TGxiKX92yboLbV9jqA4nPFrN+0nuFDh1PfUM9r
      b71GeXk5QxKHAJB+JoP3P3mf6vPVJMQl8MVXX7Bu4zp8ff3Izcvl46Ufk5OXS9Kw4YjFtufQ
      hrKuea+s3fENErGE45nH2f3Tbo6fTcPPyw93F3e0Oi1bkr/DS+GNs6NTp/i2dg0rN6+iqUVF
      ZOgAm4/brGymubH5quM9AzxJnDiEyvwKnNycmPLANBS+CqoKqzqtu1K8h78HE+6dhG+YHxV5
      5UjlMkbMHIlaqUbXdvVVwU6uzji7Ov964M+QSCUMvHEQgdFB1JfVERQTTMSw/rQ0qDFoDUik
      EiJHRhEYGYiySolXiDeRI6OQSCVomlqJvykBvwg/9Fo92hbb2vMtZjNGGyc38ovw69AbFYRI
      LEar0TJoXBwNlfXWGgiPAA8SpwzBwcWRxiolUrmUYTOH01DRQOLkwQTHBBMQFcT5wmqbC+dE
      IhESqcS2jYCIof0ZMHwALY2t6Np0BMUEowjwoLm2o0o8fHA/whP74eLhQmOVslN88KAQIoYN
      QCKVoK6/+nvyIi4eLsjsZDZts377ejbv2oxOp0Muk7NszTKOnj5KTP8YHOwdUDYpWfr1Mk5n
      nSY+Jp5Pv/yUlLTD/HQylfjoeJav/ZwjJ38ipn80Dva29z84utleu6BSqfhs+WcMThiMSCTi
      3Y/eJflAMiOGjUAmk1FXX8/f3/uHbV8AZrOZdevWdTJ9O3LkCCEhIUyYMIFNmzbZJLK32LR1
      M8fSjgPwybJPeGj+Q5RVlJNfmA/Av1YuY8lfX+Xk6ZOcKzlHdm4OLy9+mWUrlhLRL4J/vvVP
      autqKCvvuc7ctLNpFFcUU1FTweQbJvPQ7Ieoqa/Bw90TgMOnj5BbkkeLRn1Z/Nod3/D4PY+R
      dy6PmoaabtcaPy6B0IGhAIyZPZbjPxxD4avAO8i707orxY+4eRRHthxGJpfiE+pLzMgYAgcE
      4dgDHXcRw/pTV1rH2X1nkNrJ8O3nS05KFtFjOgz0pHYy6kpqUdWp8O3nR7/B/cjYnU7IoBCc
      FM7o2/WcPXAW1fmesQqpK60jffdpDDoDRp2B8IR++IT6IJFceijHT0rkxPbjlJ45B8CgcXE4
      uDois5NxJjmDrINncVY491jRnGegJw4uDqRtP45GpcHOyR6/fn74hl3qsPfr50dmcgbFp4ou
      iz9fWM3JHWmEJ/TrEb0Ao4eN5qUnXmJ78g6cHJ1Y9OAiEmISOHTsEAA79v3AxBsmEOQXxLHT
      x/jTPX/igTvmU11bzbH040SE9mPMsNHsOvhjj2n+bvtWTpw6iV6vZ+/+vfh6+5I0bATrN68H
      YOOWjcycNsO2BPDjjz8yceJEq8kRgJ+fHykpKWRkZFBZWfn7nkU38fz/PYejoyMANbW1RA6I
      JCE+gZILiW1k0igefuIRlI1K+oX3o7KqkoeffIQxN9yIq4srjzz5COWVFYSHhfeIXoPRQPKx
      /UwbMxUAe7kd5efLCA8Kx+WC7e/kUTdZ3+5/Ga9wU7Bpz2Yamxuprj/f7XoPfLsfg7ajqtXF
      04WGynqqi6vx8PfstO5K8UWnCrht0WzC4yNoqKznbEom589Vd7tmADdvN4Jighh5+yg8gzxp
      rm1Gp9EhuVCFqdNo0bfr8Qr2pq6klpbGFpJuHYFeq0ciEePi6ULSrCRcvV17RK/Z1FHt7O6r
      oOZcDfnH8mhpbLGul0gluHm7kTRrJENnDMfVyxWRSGR9czbqjYQn9iP/aF6P6AVw83XH3ded
      MXPG4hPmw8AxA8k5ktMpxmQwMXzWCAYkRV4Wb+dox4R5E6kvr+8xzSq1ikdefJTBgxLxVHiy
      4tuVfP7NCsaPGg/AqCEj+fjfn7Bp52YSBibg5OjEroM/ctfNdzE4NpFvv1/H0q+XMnLwiB7T
      /OD9DxAW2vFSVVJaQkJ8Aok/e8aNv3Ecr//9DdvN4I4fP05+fj4nTpxAp9MRHR3NU089RVhY
      GAEBAb/7iXQ3ri4u1NXXUV5Rjo+3DwAHDx/k65VfER0ZzQ8//sDghMGsWfU1yfv3IpfLWbl0
      JUMTh5B2Mq1HNOaV5GMymdh2YDsH0g4CsHnvFu6YcmVzt1/GP3rXI4wePBp3V3f8vfx6RPNF
      tBotTu7OuPsoaFW1/Gp8/PhE1r6xhrMpmYQOCut+gT9Dq9GSfzSfssxSHF0dcXR3RCKVWFtG
      ZPYyEqYMJvvgWQw6A66erhz/7hgSqQStRkva98fJP5aP/4Ce+x0MSIqkMK3giutMRhPN9c2k
      bjqCnaOddQik/4BAQuPDkUgl+IT7UV1Q1WN6ta1aqvIqObkjjeCBwTi6ORI9OgaPQE8c3ZxA
      BBl70jm2JRWfcN9O8X4RfjTXNbN/9T68gj17xJnXYrHQP6w/K/7+OWdyM9G0aXhqwSIWL3yB
      zbu2APDDgZ0seeZVHp77MAeOHkSn03E6+zSjhoxk35F9PDF/IX9b9Dd2HdjV7XqvhI+3D+UV
      5Z2ecZu2bubjdz+yrQ9g9OjRjBo1itbWVsaPH8/bb79NXFwcy5cvp6Kigvnz59tsgvVbsbUP
      QKPRsOSt12hSNVFYXMjcu+fyxjtvIhaJuXfOPYhEIowGAytWr0SEiAfum8/u5N388OMPTL1p
      KgcOH2TdpvU0q9XMuf0u7OxsH59rax+Ar6cP44aNJcAnkIjgfjg5ONGgUpIUN9was+3AdnLP
      5VJcXszw2OH8YfxMa3x+aQF7j+4l2C+YGxJH2azXlj4Amb2cqQ9MxcHFEa8gb9KTTzH5/imA
      hewjWUz52bqy7NLL4gtO5nPj7WNxdncmfd9pEicMJigqGL8wPxqq6q96rHxX+gBaGtQMGheL
      k7sT+al5uPu4E5YQTvGJQtpb2nH1csMjwAOPIC+MOgMWs4XQ+DDa1W1oW7XETojDM9CT4pNF
      GLS2TZbelT4AgNC4UOsbfOyEeFw9XfEO8aa+vA6T0YRILCJ2XBzKygbyUnOpzK3AYrFQllmK
      Z5AnTdVKWpS/npivRFf6AFqbWuk3JILAqEDyj+VReLyAmuLzSGVSzhdVIxKJGDxtCCGxoVTn
      V1GZV2GNLzpRRNyEOAIiA2ltbKW2pNZmzV3pA3jj4zc5nHaYkIBgjCYjX2z4NzmFOdwyeRae
      Ck/cXd34ctOXlJSfY/b02eSfKyCmfzQhgSEo3BSs27aOjJwMbp12G14KT5s1d6UP4KOlH1Na
      VsLpM+ncfuvtrF23lvSMdJ547AkcHR1RuCv47POlXTeDKyoqwtnZGT+/nn2j/CU91d76e5J3
      KLe3JdiEUAjW/QiFYD2DUAjWmS5XAvfv3//31CEgICAg0MMIdQACAgIC1ylCAhAQEBC4Tunz
      ZnD2bn2rPQ/oUmdfb+Lo5IRfUO/29diKwWCkvKjvmO6ZTCb02r41IYxYIsbesW/9/hycHdC3
      9a3rLJFJbJ557Wrp8wlAIrO9ErG36UszVQFIpRIc+tgP3aBS09ba1tsyrhqzyYxe38ceTBJJ
      jwzF/D3R6/TIdX2r49qgNXTbdRaagAQEBASuU4QEICAgIHCdYlMC0Gg0qFQqVCoVBsOlQheV
      SkV9fc+VZncHJSUltLd3jMNubm6mvLwci8WC2WymtLSU1tbWXtXX2t5Kc2sz7doOjQajAZ3+
      kjma3qCnubWZ5tbmy+LNZjPnG2qs2/YEMjsZdo522DnaWQ3zZPaXCnDEErF1/cUiF3tnB2QX
      xpVL5VKc3Ht+wnF3H3erHpFIhMLPw/pviVSCg4sDDi4OSGQSpHIZDi4O2Dt1FD9a13XBIK0r
      2DnYwYWWAQdnB5zcLl0vqbzj+v+neKlcimeAl7Vpwcnd2Xoe3Y2TmxP2zheaFEXg6una6ZrJ
      7OU4ODtY272lMikKP48OrVeI7260Oi3Nrc20tHUUzFksFjTtGut6k9lk/e0ZTUbr781oMmKx
      WKzr9Iaea+LT6XVUVFdgNHb0Nza3NKNsUnaKUalVtlUC7927l5SUFFasWEFsbCxeXl5UVFSw
      fv16Tpw4QX19PTExMb/rifwaZrP5N+/jnXfe4dSpUyxdupTx48fz5ptvkpmZSUpKChUVFRw9
      epQPPviAiRMn4uxsW3Xplag8W/HrQb/gb0tfpraxjnadFk27htdXvImXwpNgv2AANiVv5nD6
      EYorixkclcjLS1+xxueV5pFVnMX6PRsYGjPUZkdCg06PQWdbZWu/wRGEDAolccoQGsrriJsQ
      z8Axgyg+VQR0eMJEj4ohPLEf3iHeOLo7EzIohOhR0TTXqUi6ZSQKfw/snexpOt9o07EBdFod
      Ou3Vu4cCjL5tDAH9A0maMYK8Y7nMfPQPOCtccHRxpKGyHq9Ab4ZNHU7SzaPQarQMnTyEgIhA
      vAK9aKpt5I6/3IWLhyvtre20Ntn2wmCxWDCZTFcdP2zKcO78y12k7zuNi4cLsxbeSv8hkTTV
      NtLS2MJti2bTf3AkecdzL4uXyqXc9dzd2DnIMeoNBEUFM3x6ErFj4mmsbrhq7WKxGJnctqra
      kIGhJM1IInpkDPUV9dxwy2h8QnwYPi2JnNRsAP7w2Cw8Ajxx8XBBVdfErCdvQ24vx2gwMuLm
      UZfF24LC2wO5nW19AEs3LqOgrIDy8xUE+gby9y/+wbnKEoYNGgZAfkk+yzb+i/MNNQR4B7B8
      8+c0qBrYemArCZHxLFn+GspmJW7Orni6214J7ODqYHNf59LVSykuO8faLWuIi4nj9Q9e56eT
      qQT5B+Hj5cP+n/azeecW274AZs6cyYIFCwgMDCQ6OhqA4OBgpk+fjqenJ+7u7jaJvFbIzs7m
      2WefZfz48ZSUlPDYY48REBCAr68vd999N0OHDsXX17fHbS4uYjKZaNO2ER4QztCYIQT5BnLH
      5M4+QFV1VYQGhDJx+ATMZnOn+JtGTCIqNAqFqwdyWc90gBWdLORMcjotjWqUVUrO7DtDW/Ol
      TllVTROndp5Ap9GSl5pLUVoB6T+eQteuw9XbjfqyetK+P0ZgVFCP6AXwDvHhp+8OU5pVwoCh
      kTi6OWHQ6akt7XBQra+oY9+aZEozz1F4Mh9XLzcaKuvJPZaDh58nLcoWKgsqrPHdSe7xHApO
      dXgADRgaxU9bj7BvzR5iRg5k4A2DKEov+i/xkTTVNKJv19NQ1YDFbEFVq6JFqcbSzeMT/CMC
      yDiQQerWnxgwZAD71yRzOvk0lp95UTu6OqKsbqDodCH9EiJormvCoNXTdL7xivHdTV1jPSH+
      Idw45Ebs5XY8eucjndZX1Vfh6+nL4OjB+Hv5YSe3I8g3EEd7R6rqqvBSeDOw30AigiN6TPN9
      t99HeEg43p4+HEk7wrw75vHkgifZn3oAgPGjxrP4iRds7wPYtm0bt9xyS6dlKpUKvV6PTmfb
      G9e1wuOPP84zzzzDjh07EIlENDU10dLSgl6vx2QyUVNTg0gksjYR9TQisYjH73ocmUzGJ+s+
      xc3ZDRGdRwXMmTqHiKAIlm9egVqj7hRvMplobFYiEok6NRt1N5Ejoig83vHQ0Wku92xycHVE
      aidD3aDG3tmecfdNID81l9IzJcgd5Iy4dVSPjvI6sSuN6X+cQeSwKGR2Mtpb2ijLLmXi3Jus
      Mc4KFyx0jNrZvzaZZmUzNz92C/UVdaTtPIZviC9Dpwzrdq2a5ktNEBKpGJPRhNFgQm4vZ/St
      YzpcQn3ccbjQ1PLzeJmdnMbzjTTVNTH2jvHIHewwm0yYzeZut3bISskkfmwCI24eCUBgZBA3
      zZvM7lWXjNL2r0mmTd3G9IdnIpPLaKpVoapXMXLWqCvGdzd/vO0hfBQ+vPfVe9jJ7LCTd34R
      HDZwGJOSJpF6JpVjZ49hMBqwAEaTkbCAMGZPvJVzVefYfmhHj2lu17bT2KTEZDZhMBqRyWTI
      ZTKMRoN1/bNvPGtbAtDr9Zw6dYqRI0disVj47rvvyMrKoqmpidDQUAoKruxKeK1jMpmYNWsW
      rq6uODg4kJubS2RkJFlZWWzatAkfHx8sFgt1dXW9oq+xuZGM/Axa21pxsHOgqKKY/NJ8cs7l
      UqvsMMQ6lnmUxuZGsFhQa9Sd4g+ePIjCVQFYaFL3jHeSWCrGL8KfqvxKxBIxIbGhOLo7ERAV
      aI0ZOGYQOYc7PuNjx8fTWKXsaHJxc0RV24SmWUNVfs85VYpFIvKO56Fr15F3PBd7J3sUvh6d
      xucnzRxB0emO+zx6RAyOro6YTCb8+vnjHeyD3NEOXXv3J9mIxP4o/DyIToqhuqiK4dOTuOHW
      0ZScPcee1btpVbVg0BsxmcyXxxdWEhITiru3O20tbbh5uWHQGzCbzDi7//Ymzv+GzE5GcUYR
      JqOJc2eKmXDPRIrTiwmOCUUkEiGWiIlMisbB2QGj3kh5XjlBkUG4ebnR3tJ+WXxPcCT9CM2t
      KqRSKcpmJcfPHqeqvpqCso774ExBJtX11Wh1WhztHWlQNeAgd6C5tZncklxKq8toa2/D0d6x
      R/RaLBZ+PLiboIAgqs5XkjgogY07NvL1pq8ZntBhILl552Y83D1tM4PTaDSo1Wr8/f3Jy8sj
      Ly+PadOmkZGRAcDQoUM7zRXQE/y8M7qrVFZWcvr0aUaOHIlCoSA1NRWNRsPYsWNpbGwkIyOD
      sLAw4uPjfwfFcGxtqs3bFFUU06RuIjEygbqmOpSqjg6dIL9gPFwVNKmbKCgrJDwwDB8Pn07x
      jepGCsuL8Pfy69JnqKa5FY1a8+uBP+NiJ3BrUysisRif0A4bWpPRSENFhxuqwk9BU01HQnLz
      cbd2QjbVNOEZ5InZaOqS4yOAWqVGrVLbtI2rpyv+EQFU5FXQptbg6OpIUGQwZTml1tnIfEJ8
      qCvveBFw9XLFJ9iX6uIq2lvbCY4OwWwyd5rt7GqxtQ4goH+g9W29Ir8Cn2AfZHIp5XkXTPtE
      4BXgRUNVwxXjFT7uKPw8KDpdCEC/hAgMOj3luVdv+ieRSHBwsq0/SWYnIyw2nMbzSpTVSgIH
      BCK+MIFNRX45WMDD3wN3HwWV+RXotfoL/3anJLOEgP4Bl8XbQr+BETa7xNY21lFaVUJUWBQA
      5ec7rpHCVUGwXzA6g46swizcXNzoH9wfVYuK7OIcBoQMwNPNg6ziLKQSKQP7DexS0lIEethc
      CJZbmEt1bTWDIgfh5+NHTmEuOp2OwbGJAFRUV1BbX9t1N1CdTodcLu/1QpDfIwH0NF1JAL1J
      VxJAb9OVBNCb9NVCMFsTQG/TlQTQ23QlAVwtXa4E7ooPvoCAgIDAtYNQCCYgICBwndLnvYAs
      3T1urRsQS/pW3hVJxIjEfcvzRSwR92ix0G9GBPStFqA+ia5Ni1jUt35/Tu1O3fb76/sJwNT3
      EkB3ted1F3Kt/P/bO+/AKMr1bV/bUja9J4R00gsk9N5tqHjsotg9ioDHdqwUPYKIvYAFULED
      0lvovSa0ECA9pG162U3Zzfbvj9Uo4u/zbEg27mGu/zL7JHPPZHaemfd9n/tB52Bfmp2cne3K
      dE+n09mdG6hILOrxOUBrqa2o7ahMtxekDhJcPLpn3sK+zoSAgICAQJchJAABAQGBqxQhAQgI
      CAhcpVhlBnfx4kWWLFlCU1MTsbGWogij0ci3337Lnj17CA0Nxd3dvbu0/ilGw39voHXJ7xmN
      fLHkC5YvX46Pjw+9e/dGp9Px5oI3SU9PZ+DAgWzespnFny5GoVDQv39/9u/fzzvvvYPRYOw4
      /s5QU9A5r5jvNn6PVCzB38efwrJC1u5cR1pCGgC7ju5m1bafqW2sIz4qnpPnT/Lthu8wmowE
      +gby5dqv2Jexj7SENKRS66Z+dO3Wj09LZBKSx6YQkhhKzcUaYofGEZoUhoPcEVWN0hIkEtF3
      Yj/UyjaMBuMl8a5erkSkRtLwS9GYteh1egxW1oh4+Hsw+Kah+Pb2paa4muSxfUkckYimtZ3W
      plbEEjGDbhpMYEQgVYWVJI9OIWlUMhIHCapaFSPuGEVYUjjatnbalNbVTRiNRqsqiJ1cnBh+
      60gUBQrMZhh791hiBsRQeqGMPmnRDP/HSJzdnKm+aLnWYgbGdmxrqGxg3JTxRA+IpaqoEoPe
      wMhbR9FvXCqVRQp0mv/ufy0Si6wu/HRwdmTUnaMJiQuhIhCHWNYAACAASURBVL8cB2dHBk8a
      TFVxFaZfqpaTR6eQPCoFr0AvqoqqkDnKGDtlPFXFVUhk0svirUEsFls9bxGaGMaAGwYilUlp
      rGwgeUwKfcf2RVWnRNOiwdXLleG3j8An2JeqwkpSxvUjeUwKUgcpDYoGQuJDCYgIoLGy4a93
      9id4+Xt1yqJjf+Z+8kry6RMaxYY9G9mwZwPB/r3wcvdif+Z+Nu7bZN0bwLfffsvMmTPJycmh
      qqoKgLy8PADuvPNO1qxZY7XInkKv1xMTE8Obb77J4sWLAUjflk50dDSTJ0/miyVfMHDAQD7+
      6GP27NlDk7KJpcuW8uH7HzJ27Fib6z1+9jhF5UWUVZdjMptZmb6KEkVJx+eJfRL49yP/JiM7
      k+a2FtbuWs/zDz/HgKQBrNmxlv4JacyYMh2Z1DaV2jGDY6m5WM3p7acwGUx49/Ima+cZys79
      Vmka1T8KFw8XnN2dL4sPSwnvqB62FX3H9ePU9hNIZVL8wvxpqmrk0M8H6TchFYCIlEiUNUp0
      7XqC+vSi9HwJe3/YTfzQBDz8PNC2tXNk7aGOSuHuJHlUCqFxoUhlEmIHxtLS1ELphVJSx6Vi
      MprYunQzSSOSO+J/vy26fwy1ZbUUnMgneVRfEocl0aZqY/PnG9G0dK/fVcqYvhScLKBB0UDc
      4HjihyQQHN37khVb4UkR7F+xl6w9FoeBQZOG4OrliqOTw5/GdzcpY/qy57vdxA2LJzAyCFdP
      V3Yu30lzvaXQsP/1A8ncmolYIqZXTDAl2RfZ/c0u4ocn4u7rQe+43gRFBdlML1jsY06cP8mZ
      3DOcL7xAg7KBfz/0PIG+ltauQ/sN5ZFbH7EuAXh7e7Nq1SoaGhqorKwEICoqiiNHjrBgwQKG
      Dh3a9UfSTTg5OZGclMy/nv4XDz7wIAAhvUPYvGUzhw8fpvhiMUaTkTvvvhM/Pz/q6upQVCqY
      PmM6nyz6xKZa9Xo9u47u5vqR1wGw/dB2xg0ei+x3zp4mk4mX3nsJbw8vlKom6hpreWvpQlZu
      XUlReRF7M/bx6kezqWvq3BO1tXgEeBKSGMaIu0bh4mVZxjbk1qGEJoUClpVQngFeHVYPv493
      dnfm3N5sm/dOLj1XyoQHr6F3XAh1ZbXUV9Qx5r5xnD90DoCWxmYi+kXiE+yDh58nTq7O3PLM
      bVQWViKWSvAM9OKaR67Dp5f1lr/WkpmeQWO1xSbbO8ibysJKKosq8Q7ypjiriDF3jaP0fElH
      /O+3lV0oZchNQxl373iKzxQSEB5IeHIEU169D//Q7k26qlolSSOT8Q8LwCvAizO7T9FUe6k/
      lV6n57rHbiDtmv4dfQAaf7EE/7P47qappokbnriR9tZ2fEN88Q3x46aZN9P7F6daVZ2K1Amp
      ePp7dhjw3fbCHVQWKGiuV5G1+4xN9QL8sPlH7r1xCgDFFcUUVRQx65M5nMnLAsBB5kCbptW6
      BPDkk08ycuRIvLy8CAoKQqvVcuLECW688Ubefvtt0tNt59B3pRgMBqY9OY05s+cwfvx4AFJT
      U1nw5gLi4uIIDwsnMDCQ1atWYzKZ0Gq1JCYksuSLJeTm5dpUa87FXAxGIxt2b2TPsT2cLzzP
      8bOZ5Jfkk3nuBAA+nj68/fxCTCYTOoOOyJAoZj3xKiWKUrw9vbn3xincMOo6cotto729VUPO
      wfNcPFOET29fjq09ypHVhwlJtCQA//AApDIJoUmhhCSGXRLvbYMb6J8ROziOzYs2kp+RR0hc
      COMfuIZj649SfsHy1lJbWsuhVQdoU7bSXK+iUdHAuvdXExgZRFtTKzuWbePU9pOEp0TaVHdr
      UyteAV54+XvR2tTK9Y/cQMn5ixxcc6Aj5vfbEoYlsvu7nWxcvJ7k0X1pbWrh1K6T7Fuxh7Ck
      iG7VWnAyn2ObjqKsaUJZq7o8QAT7ftzD5k83EhofRlhiOC6eLoQlhRM72La9Rn7FO8ibLZ9u
      QuogRavWUnSqkN3f7CI0KRyAMztPcf7QOVoaW1DVqWioqGf1wpUERQX1SP1Mm6aN2sZaVqSv
      JKc4F51ex4jUETz3wDNknsvsiPt5+2rr6gD27NlDRkYGYWFheHh4MH/+fJ5//nkWLVpEVlYW
      N9xwQ5cfTHdRXV2Ng4MDH3zwARHhETz77LNUV1czb948xGIx896Yx/z581GpVDg5OREfF098
      XDyPPf4YN1xv2+NMiUkmJSaZ3OJcVK3NDE4ZBMA3G75lYJLFevjLNV/Rqm7FwcGR8OBwIoLD
      eeOz+QxPG06/+L4sWbUUsVjCv6bOtInm/KN5pEzoh9lk4ty+bAZMGohYKqEo02I+VpFTTkVO
      Ob1ieqFWqdFpdB3xZ3dnkXZ9fyRSCUljkjm3L9smmnOOXmD0vWMxG80oChSYjEb6XzcAVZ2K
      U9tP4OLhwpDJQ2lVtlFZoGD8AxMxmUzUl9fh5uPO8DtGIhKJOL7xaLdrHXnbKFw8XBh37wQO
      rT3I2HvGIZFK2PZlOjc8NomEoYkkDE1k8+cbMRlNOLvJO7YdWnuQ0XeOAREcWX8YZW0T1z9y
      A2KphN3f7exW3X6h/gy4biAGnYG9P+xm8E1Dkbu7MPKO0RxafQCtRsuou8bg4OhA7vGcjrev
      5NF9KT5TeFl8+5/YjHc1inzL/1pVq6TwZCFjpowlNDGMk9ssN9OQhFDihsSjadGgyKtg4sPX
      YjaZqSuvwzfYl6TRKTi7ORM7JI68Y93/AObi7MIbM/+DwWDg5x2rmTzuZj75YTEnzp/g7uvv
      BiwdBR1kDp03gyssLMTV1ZXAwMAuFW8ttrDe7WrObrH9K+GV0NrUSquyZ1tiWou6VY2mTf3X
      gX8TdDodqsY/eSL+GyOWiHGW25cZnFQitbtCsIjEiG4rBOt0JXCfPn26UoeAgICAgI2xr1Qo
      ICAgINBlCAlAQEBA4CrF7s3gjLrOFYL1JCEpoT0twSralG20NdlXQxi9Vo9eaz/NgrTqdurK
      63pahlUY9QbaWuzsutDp0Rvs57oAUNaraG/rnrlOu08A9mgHLfe0TW/QrsJsNlvdeq+nMegM
      GPX283DQ7uSARtW9RVhdja5dR7u6+1fhdCU6dHZ3z9Br9d1mYS0MAQkICAhcpQgJQEBAQOAq
      xSozOLDYEuj1eqRSKXq9ntraWlxdXTsMlsxmM3V1dYjFYquNojqDvr3z43kHDh7gvQ/fw2A0
      EBsTi0aj4ePFH7Pq51VERESgVCp5fd7rqNVqEuITLovvLOZOmFiB5dwu/uJTfl67mqSERNzc
      3AB4Y8E8tu/chhmorqnmsyWfsXvfHsaNGfen8daib9dbfZ4Ligv47JvPOXPuDMGBwSz6ejEH
      jx+iqLSYfon9AHj/iw/Ye2QfZjO4yF1597P3qKisIDk+mR/X/ci6revx9/XDz8fPas0mo8nq
      hjBHTx3l61XLKSgpIC4qjk+/+5SdB3fh5+3boWHnwZ38sP5H4qMT2Lx7M2vS16DVamlSNfHD
      +h85fOIIBoOB8N7hVu3boDdYbSAHEJEaSVT/KNqaWjGZTMQOiaOpsrHj2EOTw+gzIBrMZtQq
      NSkT+hIYFYiuXYdXoBcxQ2LRtevQNFtfM2E0GGlXWzdsJXWQMuimIYQlhVFXVotEKiF1Yn9q
      S2owmSzfi+gBMSSPScGgM9DS0IzMUcaw20ZQW1KDT7APg24aglFv6PDisQaDwWD1EFCftGgG
      3TCYdnU7zQ3NhCaEERgZRIPCYqsSMzCWfuPTiOwbhU6jIzAikNQJafSK6kVLUwsjbh9FeHIE
      NSXVnZqXcnaRW23g6OLlSuq1qXgFetNU3UTqNWkERARQW1qL2WzGJ9iHlPF9rXsDyM7O5okn
      niAzM5P29nbmzp3LunXr+Pjjjztili9fzpo1a3jxxRfRaP6+Y5oajYYvv/6S995+jzGjxgDQ
      3NzMmFFjmDl9Jsu+WsY7773DnFfnkL49nerq6svibU1WdhZarZaZ02bw/scfANDW1kZ9Qx2z
      X5nD6JGj2bVnF4889CizX579p/G2QtWiYsbDM0Akor6xnqcemcmIQSNoa7MUlKnVahqbGnj2
      8WcYNmAoX/64jHtvnUJFlYLMM5nkFebx/LTn+HrFcptpDgsO49UZr1DXUE9lTSX33HwPT9z7
      OD9tXAFAdV0NR04e4aUnX8TDzZ3hA4bz6oxX2bRrM/0S+jH9/ieRO8uRO9tmjse7lzfObs6c
      3HqCNlUbIQmh+AT7XNJyVKfRcXrHKSLSonD1ckXXruPc3myU1U2EpYRzZvspYgZ3/mHGWsKS
      wmmsbKD0XCkxA2OJHhBDYFQQ4t+Zu/UZEM2BFftIHpMCQOrENFw9XZE5yUi7dgAHVx4gZWw/
      m2lOGpnMzm92MOiGwXj4eRAaH0qvPsEdnxedKeTgz/txcHagrbmNmIGxHFi1j2Obj6LTaNm/
      Yi+KAgV90qJtprnfxH6c3ZVF7rFc+gyMpjynDGWtkrDkcADULRoyN2VYlwBCQkK45557AHB0
      dGTevHkMGzYMg+E3064HHniA++67DwcHh7/1ZEuFogJFpYKnnnmKxZ9b3EADAgLw8vJizutz
      mHrvVAwGAz4+PiTEJ3D0+NHL4m2Nv58/GScy2Jy+mcoqixlfc3Mzra1tTJs5jcNHD+Pl5cX7
      H73PS7Newsfb57J4WzGg7wAOHT9IRWU5ibGJuLq4smHbBu699V4AWtpaaNOoeeGNF8k4k0lt
      fS1R4VEkxibQ2tZKZU0Vz73+PEP6D7aZZlcXV15a+DKVNQqiwqLIyMrgyVnTuXnCTQAUlxVT
      WVPFC2++QFFpEcpmJY+/8gSpif2QyWSIxWKKSosYkDLAJno9/D3x8Pdg6G3D8Qv1p/hU0WUV
      2/WldfSbmEpFTjliiRg3H3cGTh6Mu68HEomYyLQoXDxdbNba0WKX3JfBNw2hPKeccweyaa67
      tAJar9Vz7aPX01jZiIe/J4hENFVbDOCMBiMGnZ42ZavNWqtKpBL6jU/D3c+T5oZmTu06dcnn
      Rr0RR7kjmEFZ00SrspWJD17LyNtHoW5WM+yW4Qz/x3AKTubbRC+Au68H/a5JZeitw2hraiUy
      rQ/evbxx87GMAmia1Qz5x1DrEoCnp2fHhSISiVi9ejX79u1jxowZHTGlpaX85z//Yfr06cjl
      f9/VLr4+viTEJ/DZos86LK2blE289MpLfPjeh6Qkp2A2m9FqtZSXlxMfF39ZvK3pFdSLT97/
      mNS+afQK6gWAi4sLn3/yGQvnv8W6DeuYcte9LP5wEY6Oli/HH+NtxeZdW7hYdpGFsxYik8nI
      KcghKCAQTw9PAOTOct6evZDZz8xi6+6tuLq6Ud9Yj6JKQZNKSXJ8Mp8uWMz+o/ttptlB5sA7
      r7xNclwyGWcyuGHsDSx/72tWbl4FgK+3D6mJqTx818OczD5Fn/A+LH1rCVk5ZzEYDazbvo5/
      XHuLzW6m7W0aKvMrOZ1+koDIgD+N6T9pABfPFFOWXUqbqo2M9cfIP5pLUHQQx9Ydpa60ljZl
      m80e1iJT+3B8w1H2/rCHmEExl30uc3IAs5ltS7biE+xDSFwIcnc5IfEh9Okfg0RmeVNwcpOj
      u4LhX2vYuGg95TmlqOqU/+ew4oDrBnJiWwYAxzcfY+sXm/EO8kHmJGP/yn3sXL6dvmNTbaIX
      LPYtxzccQ9vWTs3FGs7vz6aloYXWRssDgkQm4cjqw9YtA83Pz+fChQtIpVJ8fHzYsmULU6ZM
      4fTp0wQFBdHQ0MDKlSsZNGgQ+fn5+Pv74+Li0i0HeKV4eXkRFxfHE9Of4PprrwegpKQEuVzO
      /AXzSe2XymOPPMaTM58kPi6euNi4y+JtjU6v4/X5r2MymXjxuRcBaGhq5J0572DQG5j2z2ms
      +PkncnJz8PX1w98/gGdfeOaSeFtRUVlBVW01c999jftvn0rG6Qzuv+P+js+bVEo+/ehTDAYD
      D971AM7OchZ88ha+3r48dPdDLFy8kNlvz+HaMdfZTPNPG36irLIcs9nMyEEjmfP+XMQiERNH
      TAAgJiKGHft3sHLTKmY8MJ0Fi99CLBYTGxmDVCKltr6We26+x2Z6q4uq6TuxHwERAeQdyyN2
      aByOcicSRydx/sB5DDo9EgcpEamR9I7XU5FTbpkPEIu4sP8cMUNicfVy4+LpIptpLj1XwqAb
      B4MIzuw8Tdq1/XF2c2bwzUPI2HQMrVpLq7KNMfeOQ5FfwbkDFiPA+GEJlJ4roblOxcRHrqXs
      fCnYKGkNmjQYzwAvsvacxj/Un75j+1nM9YYlcuHIecRSCQa9saOOY9Ckwbh6ulKRV05ofBgx
      A2MRi8VkbDluE70ABRl5DLt9BGpVG3J3OXEjEjDqDZzcYnEPDk+JwD/c3zozuPLycurrLRMf
      /v7+1NZaGl+4uLhw8OBBJk+eTENDA2q1ZUIpPj4eJyenrj62S+jMxFlPY7Sxz/2V0tbUhlpp
      P8ZqYId1AG3t1P7SG8Fe0LXraKpr7GkZVqHRaDrVSawn8fbzwdHJsVv+tlVvACEhIYSEhHT8
      HBz820RIaGgoTk5O+Pr6dp06AQEBAYFuo8vqALr7SV9AQEBAoGsRCsEEBAQErlLs3gvIls2h
      uwwrC5R6HDM27897pZhNZrB9N75OYzQYUNUre1qGVZhMJiQS+/r+aTVatFr7aiIVHNkbN8/O
      FXH+FXafAHqi5+aVYo+ara2q7WnMZrPNlmN2BWazGb3OvlwqAbs6xwBGoxGjwX4WB4DlIdfB
      sXtqHoQhIAEBAYGrFCEBCAgICFylWJ0A9Ho97e2/eYC3trZeNqbW0NDQUS/wd0alUlFWVnZZ
      FaRKZSlNN5vNlJWVdRyv0WiksKgQtabn1sQbjUaKiosu81lSNVs0K5VKGhoaaGhowGg0otFo
      KC8vt7kth8lkQlGt6DhXOr0ORbXiEh3t7e1U1VZ1/KzX62nXWs51S2sLlTWVNtX955p/06DT
      62hSKWlSKdHqtCiblR0/m81mWtWt1DbYrqmLRCbBycUJJxcnpA5SRGIR7r4e8LthGamDFDcf
      9475EJmTDLnHLxX6InD3dbfpkOQfNSMCNx+3SzRIpBKL5t/h4PTbEIjMsftNJn+Po/yXFY4i
      8A707mgqL3eXI3eXXzIP+fttMkcZcnc5Tq7Ol/+tbqZd246qVUVLWwtgsV5pam66JEbdrrbO
      DTQ7O5tZs2bh7+9PWFgYzc3NzJgxA7lcTnS0xeho3759rF+/nrKyMvr37991R/R/0NliH6VS
      yRvz3yD7XDYHDh5gzOgxaLVaps+czoaNG7j1H7cyZ+4ccnJy+OTTT5h882SeevopqmuqaWxs
      JD4+vtOaO+sGCjDj6ZnUVFfT2NRIfFy8xezt6Zls3LKJf9x8C8u+/pLde3cza+5srrvmOp58
      ajo1tbXsP7if0SNHd2qf2lYtWis7Eq3fvp7T507z9arlpCalMu+jeVRUKziUcZDhA4ajqFbw
      9mdvk1eUR3FZMWbg3/P/jb+PPz5ePixevpi84nwyszIZnGobP6D129dz+vwZlq9aTmpiP+Z9
      PB9FdQUHMw4xfMAwisuKWbVpFd+v+wF3N3f2HN7LqeyTvPvFeyREJ/DViq84duoYRqORqLAo
      q/at02hpUDRY9TuBkUHEDY0nfkQiTi6OJI1KxsXDhai0KEulLDDsthF4BngSMzAGdYuG/tcN
      oHd8CGKxmLihCfj08iV6YAwlZy9ate9fsXYOIDAi8HeanYgfloCLpyvJY1IoOlWIWCJm4iPX
      4urtSkBEIE3VSsY9MAGf3j5U5JQTNyyB8Q9OIP94XqfG8tta2/7r33PxcOHOf99NUEQQBacK
      uP7RSQRGBNFvbCrleWXcO2sq7j7uqFvUtDS24Orlesm20XeMJjg6BP9Qf8oulDLmrrHcNG0y
      xzYftUpzQO8AnKxMHItXfkpeaT5lVWX4ePjwwfcfceLCSYJ8g/D19KGyrpIPvv+o82ZwAN9/
      /z233nrrJTE7duwgJiaG2FjbOQx2Bk9PT554/Al69epFgL/FR0UsFvPWm2/h4GB52pDJZPTp
      0wcvTy+qqquoq6tD7iwnJTmlRzT/qsFZLic5KdmiWSLhzXkLcPjFenvGtOn885HHGDF8eIe5
      XZ+oKKRS2z41TRo/icTYRHy9fXB3deedWe8watDIDuPAIP8g3nr5Lfol9kNn0BMWHMr9t1ms
      Itxd3bnnlnsI8PXHx8t2hYWTxk8iMSYRH69fNL/6NiMHjcRgtGiOjojmmceeYXDqYMYMGcOM
      B6czbvh4Jo2/gZSEFF579jWiwiLRG22zYqqqsJJj649g0OrJO5aL1EHKyfRMnF2dO574z+w8
      RUtDM23NaupKa9n3/R6aqhoRS8S4ermSsekYYrHYZqvpqoqqOLb+KPpfNBv0BlS1SnTtOgCc
      XJwsnkUbj+MT7ItBp+fo2sMdv19ytpiy82U20arX6tm6dHPHz55+nuz8ZjtisZiAsEBU9SrK
      csqoKrYYLfr08r1km4efJ3XltZw7ZLGzyNyWQWWhwibaa5vqCAsKY1T/UWScy+T2ibfx8OQH
      OXLmCAD7TxwgKiSy82ZwxcXFFBUVUVNTQ37+by53JpOJlJQUDh06xMWLnXuqsBXKJiUtzS3o
      dJaLTyaT4eXl1fH5r8MRIpGIpsYmvL29GTVyFHNem9MjejUaDd7e3owcPoLX3njdolkqxcvT
      85K4Tz//jCcffxKNRtPxuqrV2rZ1n9FopK6hHpFIjFan5acNP7Hz0C6efexZwHJOP1z2IWWV
      5Tx054N4eXhd8jTZ3NJMq7rNpv1bjUYj9Y11iEUii+aNK9h1aDfPPvpMR0xtQy0i6PBn/2nj
      T9wz+R7MZjOvvf8a7q7uXG9D/yLfED+aG1Ro1VpKzl5k9L1j8Qr87RqWOTng5OpsuQ5EMOa+
      cWjVWgpPFHQMbZmMJpsOA/mG+NFc34xWre2wgRZLLPrUzWpaGloYdc8YnN2cMegMlyxBbm9t
      x1YLj3Ttukv8+39dCWc0Gqktq+HIhsMERgQyeNJQAKovVl2ybfvX6Shrldz29O2IRCLaVLaz
      rXns1kfx9/bj3W/eRW/QI5PKkEllHQ8zWl07EcER1iWAX83gzp07h1ar5f7778fd3R25XE5p
      aSmnTp0iLi6Os2fPotFo/rZGcAD5Bfnk5OYQExPDufPnAIsb6IaNG1AoFBw+fBiFQoGLiwut
      ra34+fmhVCq5WHIRV1fXHtEcGhKKUqmkpLQE11/OrVKpZOPmTSgqKzl89Ai1dbU0NNYTHxdP
      m7qNtrZWXF1dUVTa1g56277t+Hh5YzabKbhYwIYdG0mKSeREtsWMKqcwh/P5FwgO6EXWhbPk
      FuVyLi+bszlnOXLiCEWlRUSERJBfbDsL3e37t+Pt6YMZKLhYwMYdG0mMSeBE9smOmB/W/sDI
      wSMByC/Ox8/bFy8PL/Yf3Y+6XYOToxN5RbZzi00Z25eze88CoFVrUeRVUHOxBszg5OpEcEww
      ypomvAK9CE+OQOYgw6Az4NPbF6PBSPTAGBxdHG1a55E8NoXsfRbNLp6u6LV6nH9NUkBbUyt1
      ZbVUFVXh4uFCaGIY7r4e+Ib4ERzbGzcfd8KSwy1zCN2Iu487sQPj8O7lQ3CfYAx6A33H9MPZ
      1Rn/EH8CwgJwlDuh/aUvcu/o3pdsSxyWhIuHC0aDEbPZTPyQBDx8PUgcltStugEOnjqIskWF
      VCIjJSaFzQc2s3rXWvrG9gUgNT6NUzmnOm8GFxYWhre3N83Nzej1etavX8/kyZPx9vYmMzMT
      Pz8/IiMju+fofodW3bmiDr1ez9FjR2ltbWXUyFG4urrS0tJC1tksADw8PAgPC+fAwQPExMQQ
      3Seauvo6jh8/zsgRI/Hw8Oi05isxg6uvr+d4ZgYjho/Aw92dltYWzp4926E5ICAAk9FEQIBl
      WCu/IJ/CoiJGjRyJq0vnEpeqWoWqRvXXgb+jsqaSnMJcegcGExocyvn8CwC4yl2I6xOHsllJ
      YYnFhdLb08vipvnLBGpIUG9KFWWoNWoG9RvYqQYrnZk8rqypJLcwl+BfNF/4RbPLL5rBctOP
      ibTYGFfXViN3luPu5k5tfS3lleUABPoHEhwY/Oc7+T9oaWwmP8P6xOHdy4fGSsvcgU9vX4sL
      ZW55xzh3QEQgzm7OVBdVIZZK8PCzXLetTS20t7bTKzqY6otVVs/x/Epn6gB+r9nJ1YnAyCDq
      ymo7jB0DIgOROcqoyC3HycUJr0BvwPJ24OAkQ+pgGc6sLamxeh6gpqoGbft/d6xydxf8Q/0B
      y/lqbmgmMiWK0pxS2tvaCU8Mx2gwUpZjmW8RicWXbPPw8yQwPICK/AraVG2EJYR3vGmVnPvv
      R0eSB6fg6eP514G/P86GWi4qLhIXEYunmycFZQVodTqS+iR2xBSUFliXAP5/tLe394gfUGcT
      QE9ib26gnUkAPc3fuRnRn9HZBNDT2FshmDUJ4O9CZxLAf4tgBicgICBwlSIUggkICAhcpdi9
      F5A9GX7ZLSL7e9UXiUR2dW1IZVKr13r3NGbAbLKv5iqu7q7d1lylu5C7y3Fy655rw+4TwK89
      Qu0Jkx11qgLLEj17O89iidiytNBeMENQhG37Nl8pRoMRrca+xtN9g/zszowxJDH0t+rtLsaO
      viECAgICAl2JkAAEBAQErlKEBCAgICBwlWKVGZzBYGDLli2IRCIMBgNLly7l2LFjlJaWkpRk
      qW5rb29n9erV+Pn52aRi1mRnk1BwZXMAHy/6mLXr19LU1ERiQiIajYaPFn3MilUriYyIpKy8
      jLffeweFQkFaaupl8Z1B26ZFp9ZZ9TsFFwv4/NvPOXM+i/4p/flp/QrWp6/Dz9cfPx8/wFJS
      /+HSDwkKCMJoNPLe5+9RUaUgJT6ZY6eO8cV3SzAaDVYbq4Gl6Y61Y735xfks/upTTp87w4C+
      A/jqp6/ZujsdZbOK2D6xNDQ28OGSjzh28hhpyWmsC6AEgwAAGkZJREFU2riKFetX0q7V0tjU
      wPKV33Dg2EEMRgMRoRFW7duoN6JWWecyq9Pr+Oznz8k4l4mb3I36pnqWb/wWR5kjvfwt8wnH
      szP4adsKfD19cXJw5Mt1X3E2/yzJ0UmoNWpWbl9FbEQsUon104Fmk9nqQiyxREzSuBQCIgPR
      t+tw93UnelAMYqmElgaLc6WTqxNRA/rQUF6PSCQibng8AVGBNFY0EBARQJ9B0Tg4O6Cqtb42
      RSwWW72g4UjWETYf2kJeSR5x4XEsWbeUExdO4CZ3w9fTF41Ww9cbl5NbkkdSVCLHz2Wwes9a
      WtQtRPWORKPVsGz9l8SGxeDoYP0EtEeABzIn67y8VM0qlixfQkpSChqNhncXvUvGqQwG9BuA
      RCIhfVc6P/78o3VvAJmZmVy4cIGamhr8/Pz45z//yZAhQ2hr+83j4sCBA1y4cIHm5marBAv8
      d5zOOsNrs1/jlptvASz/6LGjx/CvmU+x9KulLPp0MfP/M4/MExkoVarL4m2FqqWZGQ/NQCSC
      QxmHyCvK47knnmP5yuUdMWu2rqGypoq6hjqW/fQlU/4xBUVVBefzzrNi/QrmPjuHof2H2k5z
      czNPPTYTkQjO553nfO45nn/yOa4fZ/H2cXBw4MkHpxHoH8Spc6cZNWQU/3nhddanryctJY2n
      //kvXOQuuMhtY4FSWVeJm9yNx259lJjwGH7atoIZdz3J2j3rMJvNGE1GNu7bxPS7pvFj+k+k
      H9rG8H7DCesVxr7MfezJ3Mv5ogsdBn22wMXTBX27jvP7s1FWKwnvF0nWzjOEJIR2xIQkhOLT
      22ICGBgVSHtbOw0VDYQmhWIymTm7O4vguBCbaT6cdYQHb3qAOyfeQVV9FW5yNx6e/BDRoX0A
      2H50B6lxqbg4u3Ay9xQSiYRptz3O/lMHMJvNrN69hgZVA5p2zV/sqevYtG0TJ7NOodPpWbV+
      FRPHTqRPZDSbd2wBYNzIcTw34znrEsDQoUMZMGAAYMmkLi4upKenc/vtt3fEXHPNNX97J1B7
      RafXYTQYeWLGNNZvXA9AYEAgXl5ezJ47h6n3TmXYsGE89NjD1Dc0IHd2vizeVgxI6c/BjIOU
      V1YwbOAwqmqqeP4//2ZwmsXaWalSkleY1/FzbUMtUeFRJMQmcvz0carrapj99my++fkbm2ke
      2G8AB48dpFxRTnRkNEaTkRffeIn0PekAuLm6sXbrWvYc2sOAvv1pUjXxwFMP0j8lDQeZA2Kx
      mILiAgalDrKJXr1eT1l1OfOXLeCi4iIyqQxnJ2d8PX1p07TR0tZCoG8Acic5UomEIL8gth/d
      QWFZIZV1VUweczO9/IJsovVXxFIJrt5uDLhxEO5+7rQ2tjDw5kEdbqAABRn56H6p8HfxckVZ
      3YSyugkXL1fqSmuJGxZPQ7nt+o14uXuxaNWnfLvlO/QGPeU1Fbz9zTuUVFosICrrKokJiSY6
      NJrKukpSY/vx47afSI5KQlFXidlkJiTAdgkL4L477yMsxJJUQ4JDWbNxDRdyz1NWbtHs6OhI
      S2vLlc0B5Ofn4+/vj4eHByaTCb3e/nqa2hNGg5HPF3/Gss+Xsn7jBsBiYPfCyy/y0Qcf0jel
      L3v27mHF9z+REBdPfkH+ZfG2YsuuLVwsK2Hhq29RUl5KcnwSi99cxP6j+wHIzMqkXatl295t
      bNu3HTcXN+ob61FUKYiJjCEmMpoFryygqKTYZpo37dhMcelF3p77NmKxmIWzF/Lua++wbe92
      wDK8+dDdD3Hbjbexfe92YiJj+G7Rt5zOPoPBYGD1ptXccfPtNquZCPAN5NXHXubu6+7iaNYx
      dHo9ZrMZZYsSuZMcF2cXGlWNlu+mQc/wfsOYcv3d9PLrRaBvoE00/hG1qo0TmzIoOJ5HYFQQ
      bj7uZGw4jkQq+dNlu+1t7cg9XJB7uNDe2k7yuBTqy+vJP24724w7J97Bv6c+R0VNBX5efrz0
      4AvcMeF2jp87DlgSRHVjNTUNNXi5e/HFmiUk9Unirmvu5EzeGZpamjiVe5oDpw/aTPPvuWbs
      RKY9PI2wkDBCgn9LRF9+/5V1dQB79uzh6NGjiEQivL29yc7O5q677gJg69atuLi4oFKpKCgo
      oKKigilTphASYtvM97+Mpr2dWXNn0d7ezsMPPATAxYsXkcvlvDF/Hv3T0rj5xpuZ+fRTODs7
      4+/nz/Mv/fuSeFtRUVVBdW01r733OndPvgtVSzNz3pnLdWOuBWDiqIlMHDWRfUf3E+gXgIPM
      gbcWLcTX24fhA4dTXFrMS2++zNjhY2ynubKcqpoq5iycy+TrJrN2y1q0Wi1333I3ALmFufy4
      9ickEglPPTqT1997HbFYQnxMHFKplOraGqbeMdVmeitrK1m3Zx0mk4mHbnmQsKBQ5i99k0GJ
      AxCLxYjFYvrG9uXNZQu4dti1FFcUs3rXGhwdHJl2xxP8uPUnlC1Kvlr/NQ9OfgB3F/e/3ukV
      4uLpSlT/KEQiERcOXsBoMNLv2lTalK2YfmmUlDgmCbFUQvL4FC4cOE/K+L6IJWKy95wlZXxf
      esX0oldML7J2numwaO5OVu9aQ0NzI4lRiVQ31LBk7VJMZhP3T7L8r68deg3L1n2Jg8yBabc/
      wZGsoxzJOsKRrCNMv/NJpBIp245uZ1Cibd4MAT798jPqGxt4b/F7XD/hOtZsXIuTkxOznn8V
      AJ1Oh6ODY9eZwR06dIjhw4fbvGLUluOXXYXeygnVnqa5tpmWupaelmEV9lYIpm3TUl9qu3aS
      XYE9FoJJJBL7KwRL7r5CsC6rBB4xYkRX/SkBAQEBARtgP49IAgICAgJdipAABAQEBK5S7N4M
      zh6RONrXaXcP9MDF++/b3vNPEYls1ju2K9C22tdYOliK7WRO9nUtm01m7KtVELj7W18I9t9i
      X/+9/xHsaXISLHq76wIU+A1HF/uyKRZLxTi7Ofe0DKswGo3YWwZwcJYhkXXPrdq+7kQCAgIC
      Al2GkAAEBAQErlKsMoMDKC0tRavV4urqSnZ2NqdPnyYsLAyJxNIwRKFQcOrUKUpKSggLC+v2
      ugB7NIMTEPgjRp0BdZN1ZnAmk4nDGYfJzs0mPCScopIiTpw9SWV1JWG9wzpijp48RkivEIxG
      IzsP7KKopAhnJydUKhU79+/E388fubP168xFYhEyR+uHBpuUTRQWFRLgH0Bufi4ZJzOoqKwg
      IsxioHf67GlOZ52moamRXoG9SN+ZjqJKQXhoOGazmWOZxwj0D+y451iD2Wz9+I/ZbOb4ieME
      +AdQVlHGscxjFBYXYjKZ8PXxRafTsTF9E2p1G70Ce1FWUca2XdsI8AvAydGJ7bu3U1hciLOz
      M+5u1hfbyZxknR42Tt+eTm5eLvkF+fSJ6oNYLObg4YMcPnIYHx8f694ADh48yDvvvEN+fj4V
      FRVs2rQJsVjMV1991RGzbds22trahCbxAgLdTNb5LBTVCuobG1i5fiXLV36Do4MDTo6/zSW8
      9clC3l38LgCVNZXs2r8LuZMzErGENz9eQEhwCK+987rNNJdVlPHCnBdZu2kdAEu/WYajgyNO
      jr/NJXzx9RLkznIcHRxZvWENVTXVHDhykP2H9/PJkkXMmT8Htca6ZHklLF62mLlvvYZao0Ys
      liBzcGD/kQOczz0PwKdffopMJuO7ld9TWFzI6wv/Q2jvUGbNm4WiSsH2PTuQy+Wdcly9UmQy
      GRKJhA8/+bDjYVyhUBAcHMxLr75kXQIYMWIE//jHPwDQarWIRCJCQkIoKSnpiKmtreXkyZPU
      1NTYXR9ZAQF7IjU5lRvG38C53HMkxCbQ0FjPzv27aFIpO2JefuqljifryuoqFNUKjpw4ioPM
      AZ1Oh5urG61tLZbJURsQEhzCm3Pmd/xc31BH+q5tNCkbO7YpqhRs3bkVjUaNWqNGJpORkpjM
      qTOnmPnPGQzqbztLBYDpj05nUNpAAMJCQhk3ciw1tdXcdN1NAKg1GhwdHEiIi+d09hl0Oi1u
      bm60tLZQVlFORWU5h44dwsHBwaa6ASaMm4BWq+WBqQ8gFltu92FhYfy8+mcmjJtgXQL4/Q09
      KiqKUaNGcf78eWSy314DX375ZWbNmkVWVhY1NTVddBgCAgJ/RNWs4rm5z/HIlIfpn9KfL979
      grnPz2Xl+hUdN/Tff2cHpw3ix89+YNiAoazYsJLnn3yOU2dPodfrO24O3c0fHwq/+fwb3pw7
      n+9Xft+hedOKjcx96TU+XfYpU26/BweZjJy8HNzd3XvkofKP+9yxdydjR47ruO899c+ZVNfW
      cLHkIh5u7rz0zMucOH0SvV7P8MHDWP3NakYMGcEPq36wuXaz2cyq1au46/a7OrYlJSbx0AMP
      sf/gfuvN4LZu3YpYLMbd3Z0jR46gVCq59dZbOXHiBK2treTk5NDW1kZzczPe3t5dfkACAgIW
      dh/aQ6u6je9X/8CoIaM4cGw/UqkML0/vjvHxhYve5kLeBeZ9MJ/Rw0azdddWmlRNPHzPQ+w7
      vI/q2mrGDB9jsxvr+ZzzLP/xG85dyGbdpnUcyTiKTCbF28sHiUSCXq9n5gtP4eHuTp+oaAqK
      CsjNz6Ok7CKPTH2ERUsWkXn6BAveX8CLT7+Il6dXt2tevOxTMk+fYOGHC3nhXy/w8/qfWfzO
      oo7PT2efprS8lLqGekYNG8XSb5dSVV3FuNHjOXDkAJu2baZJ2chj9z/W7Vr/yM7dOxk9cjSO
      vwwL1tXVMfeNufj4+ODq6nplZnAajQaxWIyjoyOrVq3illtuwcHBAY1Gg5OTk00uKns0gxMQ
      +CPa1nbqiq7MDM5sNqPWqJE7y//P755ObzEidJA5oNfrade24+bq1qn9dUUdgNlsRq1WI5f/
      pvnX4/i1sY5SpcTN1a1Tk75/pDvqAMxmM0qVEk8PT0Qi0WXnVafXgZlODwE5ezh3aR2ATqdD
      rVbj4eHRdW6gPYWQAAT+F+iKBGBrhEIw29DVCeD3CHUAAgICAlcpQgIQEBAQuEoRvIAE/hKz
      2Wx3r82ILl+98XdGIpPg6uva0zKswmwyY9Da1xCs1FFqd15cJqMZs7l7zrOQAAT+GjM2ab3X
      lYjEIrCf+z8SmRQ3v85NxvYUOo0OpUL514F/I5xcnZDamRuvXqvHZOie7599pUIBAQEBgS5D
      SAACAgICVylWm8H93RDM4GyAmU7PAbS1tbFp8yaqq6uJiLBYEuTk5LBt+zbMZjOenp5sTd/K
      2bNniYiIoLGxkd17dpOXl0doSOglVebWIBKJ7GoO4EqG2VTNzWzevJnCokKioqIQi8XU1tay
      afMmKqsqiYyMRCQScerUKZRKJX5+fmRnZ5O+LZ1evXrh4tK5Zj9Gg5H2lnarfsdkMnHo+CGy
      L1gM7Grra9l1YDdikQhfb18Amlua2bR9E5r2dgL9Ay6L37FvJ3InZzw9PK3W7ODsgFjauede
      RWUlW9I34yJ3wcvLC51Ox9bt6eQX5FNaVkpkRCRbt22ltq6W0JBQzGYzR44dITCwc8Z1v2Iy
      mqz+/pnNZo5lHCMwIJA2dRvpO7dRfLGYiPAIxGIxeoOB9B3p1pvBzZ07l5dffpnGxkbmz5/P
      7Nmz2bBhQ0fM0aNHeeWVV1i0aNH/5y8JXC1s2LCho1Aw+1w2gOVCjIhg9pzZVFRUIBKJ0LRr
      +PCjD9m5ayfFxcWXFAYJ/P9RVFTg4eFOXl4eK1auAKCkpISgwCB27NjBwUMHqW9o4D/z3mDD
      xg1cvHiR9z98n7i4ODQajU21njmXhaLKYmC3Yt0K1m/dgK+3D/M/eLPDqXPOW3MIDAhCJLo8
      /o335hEaHMJ/3n3DproBXpn7CuFh4bw0+2XLBhE4OMjQattZ+tUS1m1cR05eLmvWr+VM1hk+
      /ORDXp7zChq1bc8xwMeff8KsN2aj1qiprKrEw92dgqIC1mxYA8B3P31HQ2ODdQkgLi6O119/
      neDgYGpqanjyySd59tlnOX36dEfMli1beOONN9DpdNTV2Vdhi0DXM2XKFGJiYqivrye4VzAA
      fVP6smXLFqIio+jTpw8tLS1s3bqV66+7HoVCQWZmJufOnesR8yx7JCEhgYLCQk6cPMGoUaMA
      GDRoEIcOH6KyqpKU5BTe/+B9nv7X0wAcOnwYjaad5d8sR9Nu25tTWkoqN0y4gewL2STGJTLt
      oScwGo34+fh1VNHmFeWzecdm8osKLouPDItgy84tBAf1sqlugD6RUazbuJ6Q3iGApZr62gnX
      UllVxfTHp3Pi1EmmTpnKnbfdwcnTJ3l65tMMGTTE5joBnnpiJoMHWEzz4mLiKLpYxKms0wwf
      MhyAtL6p7D+037oE4OnpyXvvvYe3tzdxcXGUlZXx1ltv8dhjv3lciMViJBIJPj4+qFSqLjwk
      AXvkxIkTzJs3jy8+/6LDG8rf358HH3iQxsZG6uvrmThhIvfccw8bN23kxRde5Ifvf0DVrOLY
      8WM9rN5++MfkWxg7Ziy7d+/p2Db1vqnExsSy8udV7N6zmx9/+pGdu3ah1Wm5b8q9vPryq5dY
      udsCVbOKZ2Y/y2NTH6V/3/58//P3nMg6ycI5bwGW+0dMZDQLZr3JvsP7LosvLilmxiMzaFQ2
      odPpbKq9oKiQ559+jsbGBrQ6Sw9njUbD8czjjB45GmcnJ9raWmltbcXJyblH32D/uO8br7uR
      UcNHse/gPgD2HtzHo/c/Yt0cwHfffUdgYCCjR4/GYDCwcOFCnnvuOeRyeccTf3Z2NpGRkaSn
      pzNp0qRuf4oT5gBswBXMAbwxz/I2ePT4USLCI/Dz8+OFl14gJzcHRYUCf39/ln+znIKCAqKj
      ozly5Ag/rfiJnNwcHn7oYeRy6xuVwNU1B7Bm7Rp+XrOagoICBg4cQEx0DF8s+YLde3ZTUFDI
      HbffwZxZs4mLi0Or0zH1vvt4Y948MjIzmDhhArGxsZ3ab2fmALbs3MKZ7CzKFeUYjEaWfLME
      Lw9P9h3ex+hho5FKpWRfOMfuA7uQSCRoddpL4isqK8gvyqOxqZGbrr3J6v/xlcwB7Nyzi5zc
      HOobG7jtltsQiUR89+N3DB08lJjoGLy9vXljwTxOnDrBjGkzWPr1Unbt3U1BUQGD+g/C2blz
      thmdmQP45PNP2LN/L4XFhVRWVbJt13aKiovo3y+NPpF9qG+oY+PWjdZ5Ae3du7fD+3/gwIFk
      ZmYC4Ofnh1KpJC0tDV9fX37++Wf69+/PkCHd//ojeAF1P2aTuUvrAEwmE0qlEg8PDyQSCW1t
      bZjNZlxdLYVQarUaJyenK7IoFolFlloAO8FsMmMydN6Tv7mlGZlUdslNRqlUIpfL//QhzGg0
      olarcXPrfO1Bd9YBNLc04+bqdtkN3mw209zSjLtb56yhXb1dO10HYDabUalUFhO1/2PfmnYN
      Uom004sX/gy9Vn/F37+W1hakUinOTr9dH2q1uuvM4EpKSggPD++KP2UVQgLofro6AdiCqy0B
      9AT2WAh2JQmgp+iKBPB/0WV1AD1x8xcQEBAQ6DxCIZiAgIDAVYp9vQsJ9Awi7Go4BbArHyDA
      Ls+xRCbF2cO++gHIXByQSK+8sYwtEcvEmLtpBFZIAAJ/iUhkX8Zq9orIRn15uwqJDOSenVul
      1VNInWR25wYKXTeh/Efs7UwICAgICHQRQgIQEBAQuEoREoCAgIDAVUqnzeBaWlowGAy8+OKL
      HDhw4JK4NWvWsHDhwi4VKiAg8Oeo1WrmzZvHu+++27Ht+PHjPPjgg9x1912UlJTw8ssvM2Pm
      DD766CMKCgp44MEHmDp1KvX19T2iWdXczG133c6/nn2a4xnHATiTdYZH/vkoj/zzURSVCl54
      +QUefuwRNm/ZjEql4uHHHub+hx6gsrKyRzT/L2KVFYRcLmfSpEnk5uYSEBDA/v37kcvlODk5
      ER0dDUBdXR1HjhyhpaWFMWPGdJPs3xCsIASudhobG5FIJVy4cIEJEyYAIJVKmTJlCk2NTWja
      NRw4eIDX5r7GNddcw9dff83UqVNJSkpi3959DBw4sFP7NZvNmI2d+/7l5FygsbGRl158iT5R
      fQDYtGUTw4cNRy53prq6msbGRj54/wPeXLgAk8lEWlp/Jowfz5b0LQwdMrRT+xVLJXa32qo7
      6bQZnJ+fHzk5OURGRqJWqztivvrqK2688UZ0Op3NzZoEBK5GAgIC6Ne332XbFixYQFl5GTdc
      fwNjx4xl2ZfLePzxxxk/fjyvv/46X375JUpVz1Tyenl54eXlxb+efZqt6VsBSE5K5rsfvmfv
      vn0MGTyEqupqnn72GaqqqmhsbCQwIIDAgEAaGht7RPP/IlYtA/3hhx+IiIhg+PDh1NTUEBIS
      wrFjx2hvb2fixIk0NzcTFBTEgQMHUCgUVFRUEBkZ2V3aBQQEAK1WS1NTE+2adlpbW3F1dWXl
      ypXo9XqmPTGN1tZWovpEceONN/LUU08RHh7OsqXL+Orrr0hKTOoRzRqNhhsn3UhEeASFRYUA
      pG9P5+l/PU1RURGHDh9mzqzZaLU6Pln8MTExsRw4dJAA/wBiY2J6RPP/Ip02g7vmmmsIDg5G
      oVCgVqs5fvw4aWlpJCQkALBv3z6bDAEJXkAC/wuYzeZOO67m5uayfv16AJKTk5k0aRJ79+7l
      +HHL2Po111xD1tksiouKuf2O2/H28mbR4kUkJiQyderUTrummowmjLrOff8qKyv57sfvkUml
      PP7Y47i4uFBfX8/nS79A7uzMtMenseyrZTQplTz5+DS8vb1Z+uVS2tRqZjw5HQdZ51yG7bMO
      oPsQzOAEBP4GXEkC6CmuJAH0FEICuJQuSwA9hZAABP4XEBKAbRASwKUIZ0JAQEDgKsXuvYB+
      vwJJQMCeMXeX41c3YTaZMentq4eBxGwQloH+jr9MAH/3xu6dbRkoICDQBTh0n1GZQPdj93MA
      AgICAgKdQ5gDEBAQELhKERKAgICAwFWKkAAEBAQErlKEBCAgICBwlSIkAAEBAYGrFCEBCAgI
      CFylCAlAQEBA4Crl/wE8GyjoeNHa/wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Heatmap' width='384'>
      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
      S0sXV3muiooK0tPTef311+0dWY0dO5a3336b3bt309jY2MUVtnJxcWHo0KH2x3q9Hk9PT/z8
      /Kivrwdaf8kZFxfHihUr7GeMXal///54eHgArbVt376dBQsWnLMc0BrCd911V1eUeI5frmOA
      +Ph4xo4da/8sarVakpKSWLp0KQ899FBXlHkOV1dXZs2axejRowHw8/M776pAdXU1mZmZzJkz
      h8rKyq4o0+6X6++7777jlltuobm52d4xXH19PX5+fnh7e9PU1OS4AWA2m6moqKCiogKVSkVu
      bi6RkZEcPXqUY8eOtev7uR0pPz+f+++/n0mTJrFz505yc3OprKykZ8+e7Nmzh+zs7MvW8+Dl
      EhoaytixY/Hz86OxsZHc3Fx69+7N66+/TnBw8Hm/pOwqVquVuro6zGYzTU1NdOvWjbS0NFJS
      UoiIiCAzM5OSkhKuv/56XnrpJTZs2NDVJaPT6TAajTQ2NlJeXk7//v1588032bp1K/X19RQW
      FmIymUhJSWHkyJFdXe5569hms7FlyxZuvfVWAPs6XrduHVOnTv3Vfms622effcb111/P4MGD
      CQoK4sSJE+Tn5+Pm5mZfx6GhoQwZMoQePXp0+QHNL9efv78/aWlpFBcXc+rUKTIzM4mMjCQ5
      OZnk5GTCw8Md9x5AdHQ0a9eu5d577yU9PR29Xs/48eM5dOgQnp6ejB8//nexEf6sqqqK1atX
      U11dzR//+EcWLlzIbbfdxpAhQ+jTpw8RERFdfs30l3r37s2qVasYMWIERUVF6PV6VCoVK1as
      YOjQoVx11VVdXSLQehS3fv16fH19qamp4c4772Tz5s306dOHvn37smTJEoYMGcLatWs5deoU
      f/3rX3F3d+/SmuPj4+07fz8/P/bu3cuxY8e4//772bVrF35+flitVnr16kVQUFCX1grnr+OA
      gAACAgKIjIzEaDSyZMkSBg0ahE6nIzc3F6PR2OUHYbW1tRQVFZGTk0O/fv3w8vJi//79PPzw
      w2zevBk/Pz/GjRvH+vXrCQsLY9SoUV1ab11d3Tnr79Zbb2Xw4MH4+PgwaNAglixZwt13301D
      QwMnT57kgQcekB+CQevRdVdvbG1hMpmoqamhW7duXV3KRbvS1vHP6urqsNls+Pj4dHUpF+1K
      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
    </thumbnail>
    <thumbnail height='384' name='Hour' width='384'>
      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
      1FS2b9/O4cOHqa6upk+fPrhcLsLhMAfy99qaU0SkfedTSExKZs+ePSxZsoS2bdsSCAQAuPDC
      C8nMzKR3796MHDmSHj168J3vfIeEhAQqKiqorq5m165dJCYmsnr1atq0aUNeXh4DBw5kzpw5
      dO7cmZ07d3L22Wc32c1m/+l5jN0MzrIs6urqSEhIiIQPBgK6EUxEbHcyN4JFw2Zwxt4J7HA4
      SExMtDuGiEirZewagIiINC9jrwBOxOl00v3UvoDNm8Fh4TAiA2gslOH4FPU0Fs2dITE5udme
      uyUZuwZwImoI0ziDCTsS2j0WJsyzgv3j0JBB58SxDHaPhQnnphrCiIjICakAiIjEqKhaAwCw
      AsHI7LdtGawwYZubSFtWGBwOjYUyHJfBAgc6J2j6nw+H24XDafcaT9OLqgIQrvVT8Nhcu2OI
      SIzp9ItLSOrVye4YTU5TQCIiMUoFQEQkRhlVAP61ubcJzb5FRI5nWVakyUswGIz81/CWy3/d
      vr7h4w1f6/f7I29pD4fDjR63NGPWAHw+HytWrCArK4szzjgDy7LYtGkTVVVVXHDBBXbHExGh
      urqaRx99lDZt2vDAAw8wefJkamtr2bZtG++++y5PPvkkbdu2ZcqUKQDk5uby6KOP4nA4uPvu
      u3nvvfcoKysjNTWVRx55hDvuuAOfz8cVV1zBVVdd1eLHY8wVgNPpZNSoUZEd9SorK6mtrVUv
      ABExhs/n45JLLuHo0aM4HA5mzJjBPffcw/DhwwkGg1x88cVUVlZGPj8vL49Ro0bxve99jx07
      dpCfn8/dd99NUVERRUVFZGZmMnPmTBYuXGjL8RhTABISEoiPjwfqL4vWrFnDgAED8Pv96ggm
      IkZo164d/fv3jzxuaABzxx130L59+0YfA+jSpQsrV67ko48+omfPnmRkZPD666+TlpbGKaec
      QklJCbfffnukZWRLM2YKKBwOEwgEIg2TO3fuzN69eyktLaWmpqZF26SJiJyI1+ulqKiIqqoq
      Dh8+jM/no66ujlNPPRWv18v+/fuprKzk8OHDZGVlsWrVKv7rv/6L9PR0Pv74Y/bu3csrr7zC
      rbfeSigU4p577uHo0aO89dZbthyPMXsBHT58mL179xIMBunatStdu3bFsiwOHDhAly5dAAj5
      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
    </thumbnail>
    <thumbnail height='384' name='MovingAvarage' width='384'>
      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
      H8TtYOfKL9zhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='140' name='TotalRides' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Weather' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcU0lEQVR4nO3de2zb9f3v8dfX1zRpEydOmqRtQlpKKZRxaWFCwODHkLYhIe1sSJPOtIsG
      EqNsiP0qbaBJTJW2aRsM2NmY2JDG9NuZhsaGNhhnha3dKIXQJkALJW3SpE2aa5t77Di2v/bX
      n/NHqddCgTQkOObzfKhSEl/f/sT20/6m8tcxxhgBAKwTkCQaAAD2CZz8JplMFnIOAMCHzFfo
      AQAAhUEAAMBSBAAALEUAAMBSBAAALEUAAMBSBAAALEUAAMBSBAAALEUAAMBSBGAeGWOK7nOV
      mHdhcZ9YeKzx3BEAyy2WO+JsFdu8UvHNXGzzFqPFssYEAAAsRQAAwFIEAAAsRQAAwFIEAAAs
      RQAAwFKB9z8JZs2Ny+z7v1oc/8FrdoykXKGHOAvFNq9UfDMX27wn8bg7ewRgPrnTMvv+p9BT
      nLVieuBIxTevVHwzF9u8xWgxrDGbgADAUgQAACxFAADAUgQAACxFAADAUgQAACxFAADAUgQA
      ACxFAADAUgQAACxFAADAUgQAACxFAADAUgQAACxFAADAUgQAACxFAADAUgTgFK7rau/evWpr
      a1MqlVJvb2+hRwKABUMA3mKM0QsvvKCGhgbV1dUpk8lobGxMnuepu7tbsVhMxhgNDg5qYGBA
      xhhNT09rYmJCqVSq0OMDwFkjAG/J5XIKBoOqrq5WNBrNH97a2iqfz6fdu3crnU5renpaR48e
      VU9Pj/7xj3+ora1NjuMUcHIAmBt2Cv8Wn88n13VljDntCX10dFSO4ygcDmtqakp9fX0KhUKa
      np5WVVWVrr76agIAoCjxDuAtjuOovr5e//73v/XSSy9Jkvx+v1avXq10Oq1AIKBMJiPXdZVK
      peT3+xUKhXjyB1C0HHOCkslkoWdZFDzPk+M48vn+08ZsNiu/3y/HceS6roLB4Bmf+E18ULk/
      /K8Pc1wAmDM2Ab2N3+9/x2GBwH+WKRQKfZjjAMCCYRMQAFiKAACApQgAAFiKAACApQgAAFiK
      AACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiK
      XULOI+NOy3T8P6mI9hNsjCmq/RoX27ySkTEqqpmLbo2NOfG1iGZeLGtMAOaReeuOuBh+sbOV
      y+VO2//xYlds8xpjZIwpqpmLcY0lHndzUfgJAAAFQQAAwFIEAAAsRQAAwFIEAAAsRQAAwFIE
      AAAsRQAAwFIEAAAsRQAAwFIEAAAsRQAAwFKBQg/w0ZKTycYkFc+HUhmTk3GK53VAsc0rmRP/
      iuiDyoptjY3e+jRQHndnjQDMI5MZk3toc6HHAIBZKXyCAAAFQQAAwFIEAAAsRQAAwFIEAAAs
      RQAAwFIEAAAsRQAAwFIEAAAsRQAAwFIEAAAsRQAAwFIEAAAsRQAAwFIEAAAsRQAAwFIEAAAs
      RQAAwFKLJgBTU1N6+eWXtW/fPuVyuXc93czMjIwxMsZoZmbmrK9nZmZGPT097zi8q6tLruvO
      6jIOHjx41tcLAIvNoglAa2urLr30UjU0NMgYo4mJCbW3t8t1XXV3d6uzs1Ou62rbtm3q7OzU
      0NCQnn32WfX29iqbzaq9vV0jIyNKp9OamppSX1+fUqmU2traNDU1JWOMhoaGdPDgQU1OTkqS
      PM9TZ2enhoeHNTExIc/zNDExoTfffFOpVErxeFzZbFaJREKu6yqVSungwYM6fPiwstmsOjo6
      NDg4WOCVA4C5WTQBWL16tZ5//nlNTk4ql8tpz549qqqqkuu6chxH8Xhchw4dUmlpqaqqqlRW
      VqaysjKVl5frlVdeUSQS0euvv66RkRE988wzCgQC2rNnj2pra9XS0qLjx4+ru7tb0Wg0f52t
      ra0KhUL5nz3PU2trq2pra9Xc3KwjR44okUior69Pk5OTevHFFxWNRhUMBnXo0CGlUikZYwqx
      XADwgS2aAKxZs0af+tSn1Nvbq+PHj6u6ulrLly9XLpdTZ2enJCmVSqmsrEzRaFRLly5VWVmZ
      IpGIxsfHdfToUZWUlCibzeryyy9XfX29xsfHdeTIES1ZskQjIyM6//zzVVlZmb/OVCqlxsZG
      LV++XJLkuq4qKipUU1Mjn++dSxMMBrV8+XItWbJE5557rtLptNrb299zkxUALFaLJgCvvfaa
      mpub5bquampqFIvF9OKLL2pyclLpdFqxWEyhUEg1NTXauXOnUqmUksmk9u/fr3Xr1imZTEo6
      8SQdDoclnYiK67ry+/1qbGxUS0uLXnnllfyr/sbGRj3//PNqa2tTKBRSaWmpksmkXnrpJVVU
      VKiiokJ79uxRe3u7/H6/AoFAfqaRkRFls1l5nlewNQOAD8IxJ+SfQAvFGKNcLiefzyfHcfI/
      +/1+ZbNZ+f3+/OGe58nv90tS/jSe5+XPe6pTDz/5ZH3yvG8//uQc2WxWgUBAkvLfn7zubDar
      YDCYP87n8+XfLeTcYbmHNi/sQgHAPAkUeoCTHMc57Yn51J9PPhmfPPzUn0+e5tTznurUw890
      mrcf5jhO/gle0mnfv/24U+cAgGKzaDYBAQA+XAQAACxFAADAUgQAACxFAADAUgQAACxFAADA
      UgQAACxFAADAUgQAACxFAADAUgQAACxFAADAUgQAACxFAADAUgQAACzFHk3mkeP45YTqCj3G
      WTGSnPc91eJRbPNKxTdzsc1bjBbLGi+aXUJ+FBhjJOkdu6VczE7uhrNYFNu8xhgZY4pq5mJc
      Y4nH3VwUfgIAQEEQAACwFAEAAEsRAACwFAEAAEsRAACwFAEAAEsRAACwFAEAAEsRAACwFAEA
      AEsRAACwFAEAAEvxcdDzKD7j6rfP7V8UH/M6W8ZIRfQhikU3r1R8MxfdvG99LaKRF80aE4B5
      lMp42n1gsNBjAMCssAkIACxFAADAUgQAACxFAADAUgQAACxFAADAUgQAACxFAADAUgQAACxF
      AADAUgQAACxFAADAUgQAACxFAADAUgQAACxFAADAUgQAACxVNAFwXVepVEq5XO49Tzc1NTWn
      y4/H4+972R/0OgBgMSmaAGzfvl379+/Xtm3bNDMzc9pxxpj892+88ca7Hvde2tvblU6nZ3We
      119/fVaXCQCLWdHsEzgUCuncc89VPB6X53nauXOnUqmU1q9fr46ODhlj9IlPfEKSNDw8rOPH
      j8vn82lsbEyhUEhr1qxRS0uLfD6fLrnkEq1cuVK9vb3q6upSbW1t/np27dolz/NUVVWlcDis
      lStXanh4WJFIRP39/ZqYmNDIyIgGBgZ04MABRSIRXXHFFYVaFgCYs6J5B5BKpXT06FFls1k5
      jqOpqSndcMMN6uvr0/XXX69NmzbpyJEjGhkZUUtLizZs2KCuri4tW7ZMg4ODymazWr9+va6+
      +mqNjo5Kko4cOaLrr79eGzZskCQlk0mFQiFdd911Gh8fVyqVkud5cl1X2WxW4+Pjuu6667R8
      +XI5jiNJikajBVsTAPggiiYA4XBYjY2NWrJkiWKxmCorKxUIBLRs2TINDAyor69PFRUVikaj
      ikaj6u/vV1lZmerr63XJJZec8TJDoZCOHTum8fFxSVIwGFQsFlMsFpPneXIcRxMTEzp+/Lgk
      KZ1Oa3JyUvF4XCUlJdq0aZPa29uVzWY/tHUAgPnimBOUTCYLPct7Onr0qBKJhCKRiOrr6zU+
      Pq5oNKpcLqf29naFw2GtWbNG4+Pjqqqq0tDQkCorK9XV1aXKykpVV1fL8zyFQiHNzMyooqJC
      2WxWhw4dUiQS0ZIlS1ReXq6JiQn19fXp/PPPl9/vV1tbmyoqKrRq1Solk0l1d3crGo2qurpa
      nZ2dqqysVENDgxzH0fDkjO56eHuhlwoAZqVoAlAMCACAYlI0m4AAAPOLAACApQgAAFiKAACA
      pQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACA
      pQgAAFiKPYLNo3Qmq7aeUTlyCj3KrBlj8ju4LwbFNq9UfDMX3bwyksTjbg4IwDwy5q074iL4
      xc5WLpeTz1c8bwSLbV5jjIwxRTVzMa6xxONuLgo/AQCgIAgAAFiKAACApQgAAFiKAACApQgA
      AFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQKFHuCjJJFx9Zf2AyqiT6WVjJGK
      6FMUCzXvqmUVur5pzYd+vcBCIgDzKJPL6cjkeKHHwAIIOLxZxkcP92oAsBQBAABLEQAAsBQB
      AABLEQAAsBQBAABLEQAAsBQBAABLEQAAsBQBAABLEQAAsBQBAABLEQAAsBQBAABLEQAAsBQB
      AABLEQAAsBQBOIM9e/Zo165devPNN99xXH9/v6anpwswFRaL4eFh/fjHP1Y6nZYkua6rrVu3
      avPmzWpubtauXbt0xx136Ac/+IHS6bSeeuopfeMb39Czzz6bv4w//elPuuOOO9Te3i5JOnbs
      mO6++25NT0/rueee0x133KHHHntMxpiC3EbYgQCcwczMjK655hpNTU1penpa7e3tam5uVjwe
      V2lpqYLBoHp6erR79251dnYWelx8yP74xz+qublZmUxGkuTz+XTLLbdo69atevTRR9XU1KSf
      /exnSiaT2rdvn/785z/rwQcf1G9/+1tJ0vj4uJ555hnde++9uv/++2WM0UMPPaSenh6lUin5
      fD7df//92rFjh+LxeCFvKj7iCMAZxGIxtba2KhaLqaSkRLW1tVq1apVaWlo0MDCgRCKhjo4O
      XXbZZerr6yv0uPiQffOb31RDQ0P+50AgoNbWVt100026+eabFY1Gdeutt+rVV1/Vxo0bFYlE
      9KUvfUlNTU2STrzaX7dunerq6pROp7V79241NDRo1apVkqTrrrtODzzwgC688EItW7asEDcR
      liAAZ7B06VKVlpaqpqZGxhi9/PLLyuVy8vn+s1ylpaUKh8MKBoMFnBQftrdvkjHGyHVdffaz
      n9W//vUv/f73v5ck/e53v9ONN96op556SolEQk888YT6+vrkuq6qqqryLyR8Pp9eeOEFtbe3
      a9euXXr66ad177336uKLL9Z3v/vdQtxEWIQAnEE0GtVFF12k0tJS9ff3y+/3q7+/X2VlZVq6
      dKmCwaAikYgk5b/CDrlcTj/84Q81Pj6urVu3Kh6Pa3h4WLfddpu2bNmiG2+8UY899phuv/12
      tbW16dprr9XatWu1efNmbdy4UaFQSLW1tWpqatLmzZt166236u6779bDDz+sr33ta/rc5z6n
      8fFxPffcc/rWt77FJiAsKMecoGQyWehZit5EKqmftzQXegwsgHVV1frfF11y1uczxsgYc9q7
      x8Xu7e92F7uT78ocxynwJLO3WNa48BMAAAqCAACApQgAAFiKAACApQgAAFiKAACApQgAAFiK
      AACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApdgl5DzK
      ep6GpuNS8eyZTiZn5PiKZ+BCzbskEFR1adlZn49dQi48dgk5d4FCD/BR4vf5tKq8gjviAiq2
      eYHFjEcSAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiK
      AACApfgwuHlkXFeZ9o5i+jBQGWMW7MPrAmtWy7ds2YJcNoAPjgDMIxOPK/5/fl7oMRaN8i3/
      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
      bdu0atUqjYyM6NOf/rRGR0c1MTGhyclJhUIhBQIBNTQ06OjRo6qoqFB/f7/q6uoUi8XU0dGh
      oaEh3XTTTUqn0xocHFRlZaWqqqrU0dGhsbEx1dbWanR0VFdddZVaWlq0du1a7dmzR5WVlaqr
      q1MikZDruhobG1MikdArr7yikpISrV69Wvv375ff79d5552nQ4cOqbq6WrW1tRocHFR9fb1G
      R0c1NjamCy+8UO3t7YpGowoGg0omk3IcRz09PTrvvPM0PDysG2+88YxrdOTIET399NN64403
      9Otf/1pVVVXKZDLaunWrjh49qurqau3YsUN/+9vf9NOf/lTRaFR79+6d8y8TAM7GnP8GMDo6
      qieffFIXX3yxstmspqen5fP5NDo6Ks/zJEmVlZXauHGjSktLJUk1NTU6fvx4/h3D5OSkKioq
      lMvltGLFCp1zzjlasWKFysvLtWnTJlVUVEg6EZsVK1boYx/7mAKBgC688EJddtllSiQS+evy
      PE/GGF1wwQW69NJLlUgkNDU1pY9//OOqr6/X0NCQPM+T4zianJxUIBDQDTfcoLq6OgUCAaVS
      KdXU1GjlypU699xzlcvldM0116i0tFSNjY26/PLLNTU1Jb/fr8suu0wrVqzQpk2btHTp0ndd
      o9WrV+srX/mKLrnkEg0PDysQCOhHP/qRvvrVr6qxsVFtbW36+9//rp/85CcqKytTKpVSJpNR
      MpnM3y4AWChzDkBdXZ2+8IUvaO/evRoeHpbrugqFQu95Hr/fL9d1VVZWpkAgIL/fnz8uHA6r
      v79fIyMj73r+k5tyHMfJH5ZKpXTw4EENDw+f8foOHDigwcFB1dTUyHEcVVVVqaqqSuFwWD6f
      T6lUSnV1dflNVZOTk+rr65Pf71c4HFZFRYV6e3vV1tamsrKys1qjLVu26Be/+IVKS0u1fv16
      SdLjjz+uX/7yl9qyZYvS6bQqKir04IMPateuXXr88ccVi8X0xBNPaHBw8KyuCwDOlmNOUDKZ
      nPWZjDFyXVfhcDj/R+BYLKaSkhIFg0FJJ57Q0+n0aV+lE0/YgUAgv40+GAzm4zE5OalgMKhg
      MPiO82UyGY2PjysajcoYI7/fn/87wtTUlMrLyxUOh5XL5fLH+f1+jYyMqKysTEuXLtXMzIyS
      yWR+U8zJ04+NjSkYDCoSieQ3G5WWlioUCslxHM3MzCgej6umpkaZTEahUCh/+0+dcTQxoo6R
      g7q66dr5/B0tqFwuJ5+veP4zWLHNe/J+XkwzF+MaSzrtheFit1jWeE4BwJkRgIVXbPMSgIVH
      AOau8BMAAAqCAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiK
      AACApQgAAFiKAACApQgAAFiKAACApQgAAFiKPYLNIy/nyctlFQqECz3KrC2WPRPNVrHNyx7B
      Fh57BJu7QKEH+CjxOT75/KFCjwEAs1L4BAEACoIAAIClCAAAWIoAAIClCAAAWIoAAIClCAAA
      WIoAAIClCAAAWIoAAIClCAAAWIoAAIClCMA88tysEmPxQo8BALNCAOZRJukqNjhe6DEAYFYI
      AABYigAAgKUIAABYigAAgKUIAABYigAAgKUIAABYigAAgKUIAABYigAAgKUIAABYigAAgKUI
      AABYigAAgKUIAABYigAAgKX+P7QkKoZZ2NdJAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
